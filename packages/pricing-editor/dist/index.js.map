{"version":3,"sources":["../src/utils/cn.ts","../src/components/pricing-tier-card.tsx","../src/components/pricing-tier-editor.tsx","../src/components/ab-test-panel.tsx","../src/components/grandfathering-panel.tsx","../src/components/pricing-preview.tsx","../src/components/template-selector.tsx","../src/components/pricing-calculator.tsx","../src/utils/pricing-editor-reducer.ts","../src/components/pricing-editor.tsx","../src/types/pricing.ts"],"names":["twMerge","clsx","useState","useDrag","useDrop","jsxs","jsx","Star","Check","X","Trash2","GripVertical","useCallback","useMemo","useReducer","DndProvider","HTML5Backend","AnimatePresence","motion","z"],"mappings":"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","file":"index.js","sourcesContent":["import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","import { useState } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { PricingTier, DragItem, DropResult } from '../types/pricing';\nimport { cn } from '../utils/cn';\nimport { Trash2, GripVertical, Star, Check, X } from 'lucide-react';\n\n// ============================================================================\n// Pricing Tier Card Component\n// ============================================================================\n\ninterface PricingTierCardProps {\n  tier: PricingTier;\n  index: number;\n  isSelected: boolean;\n  isEditing: boolean;\n  onSelect: () => void;\n  onUpdate: (updates: Partial<PricingTier>) => void;\n  onDelete: () => void;\n  onReorder: (tierIds: string[]) => void;\n}\n\nexport function PricingTierCard({\n  tier,\n  index: _index,\n  isSelected,\n  isEditing,\n  onSelect,\n  onUpdate,\n  onDelete,\n  onReorder: _onReorder,\n}: PricingTierCardProps) {\n  const [isEditingName, setIsEditingName] = useState(false);\n  const [isEditingPrice, setIsEditingPrice] = useState(false);\n  const [isEditingDescription, setIsEditingDescription] = useState(false);\n\n  // ============================================================================\n  // Drag and Drop\n  // ============================================================================\n\n  const [{ isDragging }, drag] = useDrag({\n    type: 'tier',\n    item: { type: 'tier', id: tier.id, data: tier } as DragItem,\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const [{ isOver, canDrop }, drop] = useDrop({\n    accept: 'tier',\n    drop: (item: DragItem, _monitor) => {\n      if (item.id === tier.id) return;\n\n      const dropResult: DropResult = {\n        dropEffect: 'move',\n        targetId: tier.id,\n        position: 'after',\n      };\n\n      // Handle reordering logic here\n      return dropResult;\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  });\n\n  // ============================================================================\n  // Event Handlers\n  // ============================================================================\n\n  const handleNameEdit = (newName: string) => {\n    if (newName.trim() && newName !== tier.name) {\n      onUpdate({ name: newName.trim() });\n    }\n    setIsEditingName(false);\n  };\n\n  const handlePriceEdit = (newPrice: string) => {\n    const price = parseFloat(newPrice);\n    if (!isNaN(price) && price >= 0 && price !== tier.price) {\n      onUpdate({ price });\n    }\n    setIsEditingPrice(false);\n  };\n\n  const handleDescriptionEdit = (newDescription: string) => {\n    if (newDescription !== tier.description) {\n      onUpdate({ description: newDescription.trim() });\n    }\n    setIsEditingDescription(false);\n  };\n\n  const handlePopularToggle = () => {\n    onUpdate({ isPopular: !tier.isPopular });\n  };\n\n  const handleActiveToggle = () => {\n    onUpdate({ isActive: !tier.isActive });\n  };\n\n  // ============================================================================\n  // Render\n  // ============================================================================\n\n  return (\n    <div\n      ref={node => drag(drop(node))}\n      className={cn(\n        'relative bg-white rounded-lg border-2 transition-all duration-200 cursor-pointer',\n        isSelected ? 'border-blue-500 shadow-lg' : 'border-gray-200 hover:border-gray-300',\n        isDragging ? 'opacity-50' : 'opacity-100',\n        isOver && canDrop ? 'border-green-500' : '',\n        tier.isPopular ? 'ring-2 ring-yellow-400' : ''\n      )}\n      onClick={onSelect}\n    >\n      {/* Popular Badge */}\n      {tier.isPopular && (\n        <div className=\"absolute -top-2 left-1/2 transform -translate-x-1/2\">\n          <div className=\"bg-yellow-400 text-yellow-900 px-3 py-1 rounded-full text-xs font-semibold flex items-center\">\n            <Star className=\"w-3 h-3 mr-1\" />\n            Most Popular\n          </div>\n        </div>\n      )}\n\n      {/* Header */}\n      <div className=\"p-6\">\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex-1\">\n            {isEditingName ? (\n              <input\n                type=\"text\"\n                defaultValue={tier.name}\n                className=\"text-xl font-bold text-gray-900 bg-transparent border-b-2 border-blue-500 focus:outline-none\"\n                // @ts-ignore - DOM types not available in DTS build\n                onBlur={e => handleNameEdit((e.target as HTMLInputElement).value)}\n                onKeyDown={e => {\n                  if (e.key === 'Enter') {\n                    // @ts-ignore - DOM types not available in DTS build\n                    handleNameEdit(e.currentTarget.value);\n                  } else if (e.key === 'Escape') {\n                    setIsEditingName(false);\n                  }\n                }}\n                autoFocus\n              />\n            ) : (\n              <h3\n                className=\"text-xl font-bold text-gray-900 cursor-pointer hover:text-blue-600\"\n                onDoubleClick={() => setIsEditingName(true)}\n              >\n                {tier.name}\n              </h3>\n            )}\n\n            {isEditingDescription ? (\n              <input\n                type=\"text\"\n                defaultValue={tier.description || ''}\n                placeholder=\"Add description...\"\n                className=\"text-sm text-gray-600 bg-transparent border-b border-gray-300 focus:outline-none w-full mt-1\"\n                // @ts-ignore - DOM types not available in DTS build\n                onBlur={e => handleDescriptionEdit((e.target as HTMLInputElement).value)}\n                onKeyDown={e => {\n                  if (e.key === 'Enter') {\n                    // @ts-ignore - DOM types not available in DTS build\n                    handleDescriptionEdit(e.currentTarget.value);\n                  } else if (e.key === 'Escape') {\n                    setIsEditingDescription(false);\n                  }\n                }}\n                autoFocus\n              />\n            ) : (\n              <p\n                className=\"text-sm text-gray-600 mt-1 cursor-pointer hover:text-blue-600\"\n                onDoubleClick={() => setIsEditingDescription(true)}\n              >\n                {tier.description || 'Click to add description...'}\n              </p>\n            )}\n          </div>\n\n          {/* Actions */}\n          {isEditing && (\n            <div className=\"flex items-center space-x-2 ml-4\">\n              <button\n                onClick={e => {\n                  e.stopPropagation();\n                  handlePopularToggle();\n                }}\n                className={cn(\n                  'p-1 rounded transition-colors',\n                  tier.isPopular\n                    ? 'text-yellow-600 hover:text-yellow-700'\n                    : 'text-gray-400 hover:text-yellow-600'\n                )}\n                title={tier.isPopular ? 'Remove popular badge' : 'Mark as popular'}\n              >\n                <Star className=\"w-4 h-4\" />\n              </button>\n\n              <button\n                onClick={e => {\n                  e.stopPropagation();\n                  handleActiveToggle();\n                }}\n                className={cn(\n                  'p-1 rounded transition-colors',\n                  tier.isActive\n                    ? 'text-green-600 hover:text-green-700'\n                    : 'text-gray-400 hover:text-green-600'\n                )}\n                title={tier.isActive ? 'Deactivate tier' : 'Activate tier'}\n              >\n                {tier.isActive ? <Check className=\"w-4 h-4\" /> : <X className=\"w-4 h-4\" />}\n              </button>\n\n              <button\n                onClick={e => {\n                  e.stopPropagation();\n                  onDelete();\n                }}\n                className=\"p-1 text-red-600 hover:text-red-700 rounded transition-colors\"\n                title=\"Delete tier\"\n              >\n                <Trash2 className=\"w-4 h-4\" />\n              </button>\n            </div>\n          )}\n        </div>\n\n        {/* Price */}\n        <div className=\"mt-4\">\n          {isEditingPrice ? (\n            <div className=\"flex items-center\">\n              <span className=\"text-3xl font-bold text-gray-900\">$</span>\n              <input\n                type=\"number\"\n                defaultValue={tier.price}\n                className=\"text-3xl font-bold text-gray-900 bg-transparent border-b-2 border-blue-500 focus:outline-none w-24\"\n                // @ts-ignore - DOM types not available in DTS build\n                onBlur={e => handlePriceEdit((e.target as HTMLInputElement).value)}\n                onKeyDown={e => {\n                  if (e.key === 'Enter') {\n                    // @ts-ignore - DOM types not available in DTS build\n                    handlePriceEdit(e.currentTarget.value);\n                  } else if (e.key === 'Escape') {\n                    setIsEditingPrice(false);\n                  }\n                }}\n                autoFocus\n              />\n            </div>\n          ) : (\n            <div\n              className=\"flex items-center cursor-pointer hover:text-blue-600\"\n              onDoubleClick={() => setIsEditingPrice(true)}\n            >\n              <span className=\"text-3xl font-bold text-gray-900\">${tier.price.toFixed(2)}</span>\n              <span className=\"text-sm text-gray-500 ml-2\">/ {tier.interval}</span>\n            </div>\n          )}\n        </div>\n\n        {/* Features */}\n        <div className=\"mt-4\">\n          <h4 className=\"text-sm font-semibold text-gray-700 mb-2\">Features</h4>\n          <div className=\"space-y-1\">\n            {tier.features.length > 0 ? (\n              tier.features.map((feature, featureIndex) => (\n                <div key={featureIndex} className=\"flex items-center text-sm text-gray-600\">\n                  <Check className=\"w-4 h-4 text-green-500 mr-2 flex-shrink-0\" />\n                  <span>{feature}</span>\n                </div>\n              ))\n            ) : (\n              <p className=\"text-sm text-gray-400 italic\">No features added yet</p>\n            )}\n          </div>\n        </div>\n\n        {/* Limits */}\n        {tier.limits && Object.keys(tier.limits).length > 0 && (\n          <div className=\"mt-4\">\n            <h4 className=\"text-sm font-semibold text-gray-700 mb-2\">Limits</h4>\n            <div className=\"space-y-1\">\n              {Object.entries(tier.limits).map(([key, value]) => (\n                <div key={key} className=\"flex items-center justify-between text-sm text-gray-600\">\n                  <span className=\"capitalize\">{key.replace(/([A-Z])/g, ' $1').toLowerCase()}</span>\n                  <span className=\"font-medium\">{value.toLocaleString()}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Metadata */}\n        {tier.metadata && Object.keys(tier.metadata).length > 0 && (\n          <div className=\"mt-4\">\n            <h4 className=\"text-sm font-semibold text-gray-700 mb-2\">Metadata</h4>\n            <div className=\"space-y-1\">\n              {Object.entries(tier.metadata).map(([key, value]) => (\n                <div key={key} className=\"flex items-center justify-between text-sm text-gray-600\">\n                  <span className=\"capitalize\">{key}</span>\n                  <span className=\"font-medium\">{String(value)}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Drag Handle */}\n      {isEditing && (\n        <div className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity\">\n          <GripVertical className=\"w-4 h-4 text-gray-400\" />\n        </div>\n      )}\n\n      {/* Status Indicators */}\n      <div className=\"absolute bottom-2 right-2 flex items-center space-x-2\">\n        {!tier.isActive && (\n          <div className=\"bg-red-100 text-red-800 px-2 py-1 rounded-full text-xs font-medium\">\n            Inactive\n          </div>\n        )}\n        {tier.isPopular && (\n          <div className=\"bg-yellow-100 text-yellow-800 px-2 py-1 rounded-full text-xs font-medium\">\n            Popular\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useCallback } from 'react';\nimport { PricingTier } from '../types/pricing';\n\ninterface PricingTierEditorProps {\n  tier: PricingTier;\n  onUpdate: (updates: Partial<PricingTier>) => void;\n  onClose: () => void;\n  currency: string;\n  supportedCurrencies: string[];\n  features: string[];\n  limits: string[];\n}\n\nexport function PricingTierEditor({\n  tier,\n  onUpdate,\n  onClose,\n  currency,\n  supportedCurrencies,\n  features,\n  limits,\n}: PricingTierEditorProps) {\n  const [formData, setFormData] = useState({\n    name: tier.name,\n    description: tier.description,\n    price: tier.price,\n    currency: tier.currency,\n    interval: tier.interval,\n    intervalCount: tier.intervalCount,\n    features: tier.features,\n    isActive: tier.isActive,\n  });\n\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      e.preventDefault();\n      onUpdate(formData);\n      onClose();\n    },\n    [formData, onUpdate, onClose]\n  );\n\n  const handleChange = useCallback((field: string, value: any) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  }, []);\n\n  return (\n    <div className=\"bg-white border rounded-lg p-4\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold\">Edit Tier</h3>\n        <button onClick={onClose} className=\"text-gray-400 hover:text-gray-600\">\n          ×\n        </button>\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">Name</label>\n          <input\n            type=\"text\"\n            value={formData.name}\n            onChange={e => handleChange('name', e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description</label>\n          <textarea\n            value={formData.description}\n            onChange={e => handleChange('description', e.target.value)}\n            rows={3}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Price</label>\n            <input\n              type=\"number\"\n              value={formData.price}\n              onChange={e => handleChange('price', parseFloat(e.target.value) || 0)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Currency</label>\n            <select\n              value={formData.currency}\n              onChange={e => handleChange('currency', e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              {supportedCurrencies.map(curr => (\n                <option key={curr} value={curr}>\n                  {curr}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Interval</label>\n            <select\n              value={formData.interval}\n              onChange={e => handleChange('interval', e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"month\">Monthly</option>\n              <option value=\"year\">Yearly</option>\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Interval Count</label>\n            <input\n              type=\"number\"\n              value={formData.intervalCount}\n              onChange={e => handleChange('intervalCount', parseInt(e.target.value) || 1)}\n              min=\"1\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">Features</label>\n          <div className=\"space-y-2\">\n            {features.map((feature, index) => (\n              <label key={index} className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  checked={formData.features.includes(feature)}\n                  onChange={e => {\n                    const newFeatures = e.target.checked\n                      ? [...formData.features, feature]\n                      : formData.features.filter(f => f !== feature);\n                    handleChange('features', newFeatures);\n                  }}\n                  className=\"mr-2\"\n                />\n                <span className=\"text-sm text-gray-700\">{feature}</span>\n              </label>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"flex items-center\">\n          <input\n            type=\"checkbox\"\n            id=\"isActive\"\n            checked={formData.isActive}\n            onChange={e => handleChange('isActive', e.target.checked)}\n            className=\"mr-2\"\n          />\n          <label htmlFor=\"isActive\" className=\"text-sm text-gray-700\">\n            Active\n          </label>\n        </div>\n\n        <div className=\"flex justify-end space-x-2\">\n          <button\n            type=\"button\"\n            onClick={onClose}\n            className=\"px-4 py-2 text-sm text-gray-600 hover:text-gray-800\"\n          >\n            Cancel\n          </button>\n          <button\n            type=\"submit\"\n            className=\"px-4 py-2 bg-blue-600 text-white text-sm rounded-md hover:bg-blue-700\"\n          >\n            Save Changes\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { ABTest, PricingPlan } from '../types/pricing';\n\ninterface ABTestPanelProps {\n  activeTest: ABTest | null;\n  onStart: (test: ABTest) => void;\n  onStop: () => void;\n  currentPlan: PricingPlan;\n}\n\nexport function ABTestPanel({ activeTest, onStart, onStop, currentPlan }: ABTestPanelProps) {\n  const [isCreating, setIsCreating] = useState(false);\n  const [testConfig, setTestConfig] = useState({\n    name: '',\n    description: '',\n    variantName: '',\n    trafficSplit: 50,\n    duration: 30,\n  });\n\n  const handleStartTest = () => {\n    const newTest: ABTest = {\n      id: `test-${Date.now()}`,\n      name: testConfig.name,\n      description: testConfig.description,\n      variantName: testConfig.variantName,\n      trafficSplit: testConfig.trafficSplit,\n      duration: testConfig.duration,\n      startDate: new Date(),\n      status: 'running',\n      metrics: {\n        conversions: 0,\n        revenue: 0,\n        users: 0,\n      },\n    };\n\n    onStart(newTest);\n    setIsCreating(false);\n    setTestConfig({\n      name: '',\n      description: '',\n      variantName: '',\n      trafficSplit: 50,\n      duration: 30,\n    });\n  };\n\n  if (activeTest) {\n    return (\n      <div className=\"bg-white border rounded-lg p-4\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-semibold\">Active A/B Test</h3>\n          <button\n            onClick={onStop}\n            className=\"px-3 py-1 bg-red-600 text-white text-sm rounded hover:bg-red-700\"\n          >\n            Stop Test\n          </button>\n        </div>\n\n        <div className=\"space-y-3\">\n          <div>\n            <h4 className=\"font-medium text-gray-900\">{activeTest.name}</h4>\n            <p className=\"text-sm text-gray-600\">{activeTest.description}</p>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-500\">Variant:</span>\n              <span className=\"ml-2 font-medium\">{activeTest.variantName}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">Traffic Split:</span>\n              <span className=\"ml-2 font-medium\">{activeTest.trafficSplit}%</span>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">Duration:</span>\n              <span className=\"ml-2 font-medium\">{activeTest.duration} days</span>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">Status:</span>\n              <span className=\"ml-2 font-medium text-green-600 capitalize\">\n                {activeTest.status}\n              </span>\n            </div>\n          </div>\n\n          <div className=\"pt-3 border-t\">\n            <h5 className=\"font-medium text-gray-900 mb-2\">Metrics</h5>\n            <div className=\"grid grid-cols-3 gap-4 text-sm\">\n              <div>\n                <span className=\"text-gray-500\">Users:</span>\n                <span className=\"ml-2 font-medium\">{activeTest.metrics.users}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-500\">Conversions:</span>\n                <span className=\"ml-2 font-medium\">{activeTest.metrics.conversions}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-500\">Revenue:</span>\n                <span className=\"ml-2 font-medium\">${activeTest.metrics.revenue}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (isCreating) {\n    return (\n      <div className=\"bg-white border rounded-lg p-4\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-semibold\">Create A/B Test</h3>\n          <button\n            onClick={() => setIsCreating(false)}\n            className=\"text-gray-400 hover:text-gray-600\"\n          >\n            ×\n          </button>\n        </div>\n\n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Test Name</label>\n            <input\n              type=\"text\"\n              value={testConfig.name}\n              onChange={e => setTestConfig(prev => ({ ...prev, name: e.target.value }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description</label>\n            <textarea\n              value={testConfig.description}\n              onChange={e => setTestConfig(prev => ({ ...prev, description: e.target.value }))}\n              rows={2}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Variant Name</label>\n            <input\n              type=\"text\"\n              value={testConfig.variantName}\n              onChange={e => setTestConfig(prev => ({ ...prev, variantName: e.target.value }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Traffic Split (%)\n              </label>\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"99\"\n                value={testConfig.trafficSplit}\n                onChange={e =>\n                  setTestConfig(prev => ({ ...prev, trafficSplit: parseInt(e.target.value) || 50 }))\n                }\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Duration (days)\n              </label>\n              <input\n                type=\"number\"\n                min=\"1\"\n                value={testConfig.duration}\n                onChange={e =>\n                  setTestConfig(prev => ({ ...prev, duration: parseInt(e.target.value) || 30 }))\n                }\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n          </div>\n\n          <div className=\"flex justify-end space-x-2\">\n            <button\n              onClick={() => setIsCreating(false)}\n              className=\"px-4 py-2 text-sm text-gray-600 hover:text-gray-800\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handleStartTest}\n              disabled={!testConfig.name || !testConfig.variantName}\n              className=\"px-4 py-2 bg-blue-600 text-white text-sm rounded-md hover:bg-blue-700 disabled:opacity-50\"\n            >\n              Start Test\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white border rounded-lg p-4\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold\">A/B Testing</h3>\n        <button\n          onClick={() => setIsCreating(true)}\n          className=\"px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700\"\n        >\n          New Test\n        </button>\n      </div>\n\n      <div className=\"text-center py-8\">\n        <div className=\"text-gray-400 mb-2\">\n          <svg className=\"w-12 h-12 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"\n            />\n          </svg>\n        </div>\n        <p className=\"text-gray-500 text-sm\">No active A/B tests</p>\n        <p className=\"text-gray-400 text-xs mt-1\">Create a test to compare pricing strategies</p>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { GrandfatheringRule } from '../types/pricing';\n\ninterface GrandfatheringPanelProps {\n  rules: GrandfatheringRule[];\n  onAdd: (rule: GrandfatheringRule) => void;\n  onUpdate: (id: string, rule: GrandfatheringRule) => void;\n  onDelete: (id: string) => void;\n}\n\nexport function GrandfatheringPanel({\n  rules,\n  onAdd,\n  onUpdate,\n  onDelete,\n}: GrandfatheringPanelProps) {\n  const [isCreating, setIsCreating] = useState(false);\n  const [editingRule, setEditingRule] = useState<string | null>(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    customerSegment: '',\n    originalPrice: 0,\n    grandfatheredPrice: 0,\n    startDate: '',\n    endDate: '',\n    isActive: true,\n  });\n\n  const handleSubmit = () => {\n    const newRule: GrandfatheringRule = {\n      id: editingRule || `rule-${Date.now()}`,\n      name: formData.name,\n      description: formData.description,\n      customerSegment: formData.customerSegment,\n      originalPrice: formData.originalPrice,\n      grandfatheredPrice: formData.grandfatheredPrice,\n      startDate: new Date(formData.startDate),\n      endDate: formData.endDate ? new Date(formData.endDate) : null,\n      isActive: formData.isActive,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n\n    if (editingRule) {\n      onUpdate(editingRule, newRule);\n    } else {\n      onAdd(newRule);\n    }\n\n    setIsCreating(false);\n    setEditingRule(null);\n    setFormData({\n      name: '',\n      description: '',\n      customerSegment: '',\n      originalPrice: 0,\n      grandfatheredPrice: 0,\n      startDate: '',\n      endDate: '',\n      isActive: true,\n    });\n  };\n\n  const handleEdit = (rule: GrandfatheringRule) => {\n    setFormData({\n      name: rule.name,\n      description: rule.description,\n      customerSegment: rule.customerSegment,\n      originalPrice: rule.originalPrice,\n      grandfatheredPrice: rule.grandfatheredPrice,\n      startDate: rule.startDate.toISOString().split('T')[0],\n      endDate: rule.endDate ? rule.endDate.toISOString().split('T')[0] : '',\n      isActive: rule.isActive,\n    });\n    setEditingRule(rule.id);\n    setIsCreating(true);\n  };\n\n  const handleCancel = () => {\n    setIsCreating(false);\n    setEditingRule(null);\n    setFormData({\n      name: '',\n      description: '',\n      customerSegment: '',\n      originalPrice: 0,\n      grandfatheredPrice: 0,\n      startDate: '',\n      endDate: '',\n      isActive: true,\n    });\n  };\n\n  return (\n    <div className=\"bg-white border rounded-lg p-4\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold\">Grandfathering Rules</h3>\n        <button\n          onClick={() => setIsCreating(true)}\n          className=\"px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700\"\n        >\n          Add Rule\n        </button>\n      </div>\n\n      {isCreating ? (\n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Rule Name</label>\n            <input\n              type=\"text\"\n              value={formData.name}\n              onChange={e => setFormData(prev => ({ ...prev, name: e.target.value }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description</label>\n            <textarea\n              value={formData.description}\n              onChange={e => setFormData(prev => ({ ...prev, description: e.target.value }))}\n              rows={2}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Customer Segment</label>\n            <input\n              type=\"text\"\n              value={formData.customerSegment}\n              onChange={e => setFormData(prev => ({ ...prev, customerSegment: e.target.value }))}\n              placeholder=\"e.g., Early adopters, Enterprise customers\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Original Price</label>\n              <input\n                type=\"number\"\n                value={formData.originalPrice}\n                onChange={e =>\n                  setFormData(prev => ({ ...prev, originalPrice: parseFloat(e.target.value) || 0 }))\n                }\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Grandfathered Price\n              </label>\n              <input\n                type=\"number\"\n                value={formData.grandfatheredPrice}\n                onChange={e =>\n                  setFormData(prev => ({\n                    ...prev,\n                    grandfatheredPrice: parseFloat(e.target.value) || 0,\n                  }))\n                }\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Start Date</label>\n              <input\n                type=\"date\"\n                value={formData.startDate}\n                onChange={e => setFormData(prev => ({ ...prev, startDate: e.target.value }))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                End Date (optional)\n              </label>\n              <input\n                type=\"date\"\n                value={formData.endDate}\n                onChange={e => setFormData(prev => ({ ...prev, endDate: e.target.value }))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n          </div>\n\n          <div className=\"flex items-center\">\n            <input\n              type=\"checkbox\"\n              id=\"isActive\"\n              checked={formData.isActive}\n              onChange={e => setFormData(prev => ({ ...prev, isActive: e.target.checked }))}\n              className=\"mr-2\"\n            />\n            <label htmlFor=\"isActive\" className=\"text-sm text-gray-700\">\n              Active\n            </label>\n          </div>\n\n          <div className=\"flex justify-end space-x-2\">\n            <button\n              onClick={handleCancel}\n              className=\"px-4 py-2 text-sm text-gray-600 hover:text-gray-800\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handleSubmit}\n              disabled={!formData.name || !formData.customerSegment}\n              className=\"px-4 py-2 bg-blue-600 text-white text-sm rounded-md hover:bg-blue-700 disabled:opacity-50\"\n            >\n              {editingRule ? 'Update Rule' : 'Add Rule'}\n            </button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"space-y-3\">\n          {rules.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <div className=\"text-gray-400 mb-2\">\n                <svg\n                  className=\"w-12 h-12 mx-auto\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                </svg>\n              </div>\n              <p className=\"text-gray-500 text-sm\">No grandfathering rules</p>\n              <p className=\"text-gray-400 text-xs mt-1\">\n                Add rules to protect existing customers from price changes\n              </p>\n            </div>\n          ) : (\n            rules.map(rule => (\n              <div key={rule.id} className=\"border rounded-lg p-3\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h4 className=\"font-medium text-gray-900\">{rule.name}</h4>\n                    <p className=\"text-sm text-gray-600\">{rule.description}</p>\n                    <div className=\"mt-2 text-xs text-gray-500\">\n                      <span className=\"mr-4\">Segment: {rule.customerSegment}</span>\n                      <span className=\"mr-4\">Original: ${rule.originalPrice}</span>\n                      <span className=\"mr-4\">Grandfathered: ${rule.grandfatheredPrice}</span>\n                      <span\n                        className={`px-2 py-1 rounded text-xs ${rule.isActive ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'}`}\n                      >\n                        {rule.isActive ? 'Active' : 'Inactive'}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <button\n                      onClick={() => handleEdit(rule)}\n                      className=\"text-blue-600 hover:text-blue-800 text-sm\"\n                    >\n                      Edit\n                    </button>\n                    <button\n                      onClick={() => onDelete(rule.id)}\n                      className=\"text-red-600 hover:text-red-800 text-sm\"\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { PricingPlan } from '../types/pricing';\n\ninterface PricingPreviewProps {\n  plan: PricingPlan;\n  currency: string;\n}\n\nexport function PricingPreview({ plan, currency }: PricingPreviewProps) {\n  return (\n    <div className=\"bg-white border rounded-lg p-6\">\n      <div className=\"text-center mb-8\">\n        <h2 className=\"text-3xl font-bold text-gray-900 mb-2\">{plan.name}</h2>\n        <p className=\"text-lg text-gray-600\">{plan.description}</p>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {plan.tiers.map((tier, index) => (\n          <div\n            key={tier.id}\n            className={`relative border rounded-lg p-6 ${\n              index === 1 ? 'border-blue-500 ring-2 ring-blue-200' : 'border-gray-200'\n            }`}\n          >\n            {index === 1 && (\n              <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\">\n                <span className=\"bg-blue-500 text-white px-3 py-1 rounded-full text-sm font-medium\">\n                  Most Popular\n                </span>\n              </div>\n            )}\n\n            <div className=\"text-center mb-6\">\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">{tier.name}</h3>\n              <p className=\"text-gray-600 text-sm mb-4\">{tier.description}</p>\n\n              <div className=\"mb-4\">\n                <span className=\"text-4xl font-bold text-gray-900\">\n                  {tier.price === 0 ? 'Free' : `$${tier.price}`}\n                </span>\n                {tier.price > 0 && (\n                  <span className=\"text-gray-600 ml-1\">\n                    /{tier.interval === 'month' ? 'month' : 'year'}\n                  </span>\n                )}\n              </div>\n\n              {tier.price > 0 && tier.intervalCount > 1 && (\n                <p className=\"text-sm text-gray-500\">\n                  Billed every {tier.intervalCount} {tier.interval === 'month' ? 'months' : 'years'}\n                </p>\n              )}\n            </div>\n\n            <div className=\"space-y-3 mb-6\">\n              {tier.features.map((feature, featureIndex) => (\n                <div key={featureIndex} className=\"flex items-start\">\n                  <svg\n                    className=\"w-5 h-5 text-green-500 mr-3 mt-0.5 flex-shrink-0\"\n                    fill=\"currentColor\"\n                    viewBox=\"0 0 20 20\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                      clipRule=\"evenodd\"\n                    />\n                  </svg>\n                  <span className=\"text-sm text-gray-700\">{feature}</span>\n                </div>\n              ))}\n            </div>\n\n            <button\n              className={`w-full py-3 px-4 rounded-lg font-medium transition-colors ${\n                index === 1\n                  ? 'bg-blue-600 text-white hover:bg-blue-700'\n                  : 'bg-gray-100 text-gray-900 hover:bg-gray-200'\n              }`}\n            >\n              {tier.price === 0 ? 'Get Started' : 'Choose Plan'}\n            </button>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"mt-8 text-center\">\n        <p className=\"text-sm text-gray-500\">\n          All plans include 24/7 support and a 30-day money-back guarantee\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { PricingTemplate } from '../types/pricing';\n\ninterface TemplateSelectorProps {\n  templates: PricingTemplate[];\n  onSelect: (template: PricingTemplate) => void;\n  onCreate: () => void;\n}\n\nexport function TemplateSelector({ templates, onSelect, onCreate }: TemplateSelectorProps) {\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const categories = ['all', ...new Set(templates.map(t => t.category))];\n\n  const filteredTemplates = templates.filter(template => {\n    const matchesCategory = selectedCategory === 'all' || template.category === selectedCategory;\n    const matchesSearch =\n      template.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      template.description.toLowerCase().includes(searchQuery.toLowerCase());\n    return matchesCategory && matchesSearch;\n  });\n\n  return (\n    <div className=\"bg-white border rounded-lg p-6\">\n      <div className=\"mb-6\">\n        <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Choose a Template</h3>\n        <p className=\"text-gray-600\">Start with a pre-built pricing structure or create your own</p>\n      </div>\n\n      {/* Search and Filter */}\n      <div className=\"mb-6 space-y-4\">\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Search templates...\"\n            value={searchQuery}\n            onChange={e => setSearchQuery(e.target.value)}\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div className=\"flex flex-wrap gap-2\">\n          {categories.map(category => (\n            <button\n              key={category}\n              onClick={() => setSelectedCategory(category)}\n              className={`px-3 py-1 rounded-full text-sm font-medium transition-colors ${\n                selectedCategory === category\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              {category === 'all' ? 'All Templates' : category}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Templates Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-6\">\n        {filteredTemplates.map(template => (\n          <div\n            key={template.id}\n            onClick={() => onSelect(template)}\n            className=\"border border-gray-200 rounded-lg p-4 hover:border-blue-300 hover:shadow-md transition-all cursor-pointer\"\n          >\n            <div className=\"mb-3\">\n              <h4 className=\"font-medium text-gray-900 mb-1\">{template.name}</h4>\n              <p className=\"text-sm text-gray-600\">{template.description}</p>\n            </div>\n\n            <div className=\"mb-3\">\n              <div className=\"bg-gray-50 rounded p-3 text-xs text-gray-600 font-mono\">\n                {template.preview}\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded\">\n                {template.category}\n              </span>\n              <button className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\">\n                Use Template →\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {filteredTemplates.length === 0 && (\n        <div className=\"text-center py-8\">\n          <div className=\"text-gray-400 mb-2\">\n            <svg\n              className=\"w-12 h-12 mx-auto\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n              />\n            </svg>\n          </div>\n          <p className=\"text-gray-500 text-sm\">No templates found</p>\n          <p className=\"text-gray-400 text-xs mt-1\">Try adjusting your search or filters</p>\n        </div>\n      )}\n\n      {/* Create New */}\n      <div className=\"border-t pt-6\">\n        <div className=\"text-center\">\n          <h4 className=\"font-medium text-gray-900 mb-2\">Don't see what you need?</h4>\n          <p className=\"text-sm text-gray-600 mb-4\">Create a custom pricing plan from scratch</p>\n          <button\n            onClick={onCreate}\n            className=\"px-6 py-3 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 transition-colors\"\n          >\n            Create Custom Plan\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useMemo } from 'react';\nimport { PricingPlan } from '../types/pricing';\n\ninterface PricingCalculatorProps {\n  plan: PricingPlan;\n  currency: string;\n}\n\nexport function PricingCalculator({ plan, currency }: PricingCalculatorProps) {\n  const [inputs, setInputs] = useState({\n    monthlyRevenue: 0,\n    customerCount: 0,\n    churnRate: 5,\n    growthRate: 10,\n  });\n\n  const calculations = useMemo(() => {\n    const { monthlyRevenue, customerCount, churnRate, growthRate } = inputs;\n\n    // Calculate metrics for each tier\n    const tierMetrics = plan.tiers.map(tier => {\n      const monthlyPrice = tier.price;\n      const customersAtTier = Math.floor(customerCount * (1 / plan.tiers.length)); // Simplified distribution\n      const monthlyRevenueFromTier = customersAtTier * monthlyPrice;\n      const annualRevenueFromTier = monthlyRevenueFromTier * 12;\n\n      // Churn impact\n      const monthlyChurn = customersAtTier * (churnRate / 100);\n      const monthlyNewCustomers = customersAtTier * (growthRate / 100);\n      const netGrowth = monthlyNewCustomers - monthlyChurn;\n\n      return {\n        tier,\n        customersAtTier,\n        monthlyRevenueFromTier,\n        annualRevenueFromTier,\n        monthlyChurn,\n        monthlyNewCustomers,\n        netGrowth,\n      };\n    });\n\n    // Total calculations\n    const totalMonthlyRevenue = tierMetrics.reduce(\n      (sum, tier) => sum + tier.monthlyRevenueFromTier,\n      0\n    );\n    const totalAnnualRevenue = totalMonthlyRevenue * 12;\n    const totalMonthlyChurn = tierMetrics.reduce((sum, tier) => sum + tier.monthlyChurn, 0);\n    const totalMonthlyNewCustomers = tierMetrics.reduce(\n      (sum, tier) => sum + tier.monthlyNewCustomers,\n      0\n    );\n    const totalNetGrowth = totalMonthlyNewCustomers - totalMonthlyChurn;\n\n    return {\n      tierMetrics,\n      totalMonthlyRevenue,\n      totalAnnualRevenue,\n      totalMonthlyChurn,\n      totalMonthlyNewCustomers,\n      totalNetGrowth,\n    };\n  }, [inputs, plan.tiers]);\n\n  const handleInputChange = (field: string, value: number) => {\n    setInputs(prev => ({ ...prev, [field]: value }));\n  };\n\n  return (\n    <div className=\"bg-white border rounded-lg p-4\">\n      <h3 className=\"text-lg font-semibold mb-4\">Revenue Calculator</h3>\n\n      {/* Input Controls */}\n      <div className=\"space-y-4 mb-6\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Current Monthly Revenue\n          </label>\n          <input\n            type=\"number\"\n            value={inputs.monthlyRevenue}\n            onChange={e => handleInputChange('monthlyRevenue', parseFloat(e.target.value) || 0)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">Customer Count</label>\n          <input\n            type=\"number\"\n            value={inputs.customerCount}\n            onChange={e => handleInputChange('customerCount', parseInt(e.target.value) || 0)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Churn Rate (%)</label>\n            <input\n              type=\"number\"\n              value={inputs.churnRate}\n              onChange={e => handleInputChange('churnRate', parseFloat(e.target.value) || 0)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Growth Rate (%)</label>\n            <input\n              type=\"number\"\n              value={inputs.growthRate}\n              onChange={e => handleInputChange('growthRate', parseFloat(e.target.value) || 0)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Results */}\n      <div className=\"space-y-4\">\n        <div className=\"bg-gray-50 rounded-lg p-4\">\n          <h4 className=\"font-medium text-gray-900 mb-3\">Projected Revenue</h4>\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-500\">Monthly:</span>\n              <span className=\"ml-2 font-medium\">\n                ${calculations.totalMonthlyRevenue.toLocaleString()}\n              </span>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">Annual:</span>\n              <span className=\"ml-2 font-medium\">\n                ${calculations.totalAnnualRevenue.toLocaleString()}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-gray-50 rounded-lg p-4\">\n          <h4 className=\"font-medium text-gray-900 mb-3\">Customer Metrics</h4>\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-500\">Monthly Churn:</span>\n              <span className=\"ml-2 font-medium\">{calculations.totalMonthlyChurn.toFixed(0)}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">New Customers:</span>\n              <span className=\"ml-2 font-medium\">\n                {calculations.totalMonthlyNewCustomers.toFixed(0)}\n              </span>\n            </div>\n            <div>\n              <span className=\"text-gray-500\">Net Growth:</span>\n              <span\n                className={`ml-2 font-medium ${calculations.totalNetGrowth >= 0 ? 'text-green-600' : 'text-red-600'}`}\n              >\n                {calculations.totalNetGrowth >= 0 ? '+' : ''}\n                {calculations.totalNetGrowth.toFixed(0)}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        {/* Tier Breakdown */}\n        <div>\n          <h4 className=\"font-medium text-gray-900 mb-3\">Tier Breakdown</h4>\n          <div className=\"space-y-2\">\n            {calculations.tierMetrics.map((tier, index) => (\n              <div key={tier.tier.id} className=\"flex items-center justify-between text-sm\">\n                <div>\n                  <span className=\"font-medium\">{tier.tier.name}</span>\n                  <span className=\"text-gray-500 ml-2\">\n                    ({tier.customersAtTier.toFixed(0)} customers)\n                  </span>\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"font-medium\">\n                    ${tier.monthlyRevenueFromTier.toLocaleString()}/mo\n                  </div>\n                  <div className=\"text-gray-500\">\n                    ${tier.annualRevenueFromTier.toLocaleString()}/yr\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {\n  PricingEditorState,\n  PricingEditorAction,\n  PricingPlan,\n  PricingTier\n} from '../types/pricing';\n\n// ============================================================================\n// Pricing Editor Reducer\n// ============================================================================\n\nexport function pricingEditorReducer(\n  state: PricingEditorState,\n  action: PricingEditorAction\n): PricingEditorState {\n  switch (action.type) {\n    case 'SET_PLAN':\n      return {\n        ...state,\n        currentPlan: action.payload,\n        selectedTier: null,\n        isEditing: false,\n        isPreviewMode: false,\n      };\n\n    case 'ADD_TIER':\n      if (!state.currentPlan) return state;\n      \n      const newTier = {\n        ...action.payload,\n        sortOrder: state.currentPlan.tiers.length,\n      };\n      \n      return {\n        ...state,\n        currentPlan: {\n          ...state.currentPlan,\n          tiers: [...state.currentPlan.tiers, newTier],\n          updatedAt: new Date(),\n        },\n      };\n\n    case 'UPDATE_TIER':\n      if (!state.currentPlan) return state;\n      \n      const updatedTiers = state.currentPlan.tiers.map(tier =>\n        tier.id === action.payload.id\n          ? { ...tier, ...action.payload.updates }\n          : tier\n      );\n      \n      return {\n        ...state,\n        currentPlan: {\n          ...state.currentPlan,\n          tiers: updatedTiers,\n          updatedAt: new Date(),\n        },\n        selectedTier: state.selectedTier?.id === action.payload.id\n          ? { ...state.selectedTier, ...action.payload.updates }\n          : state.selectedTier,\n      };\n\n    case 'DELETE_TIER':\n      if (!state.currentPlan) return state;\n      \n      const filteredTiers = state.currentPlan.tiers.filter(\n        tier => tier.id !== action.payload\n      );\n      \n      return {\n        ...state,\n        currentPlan: {\n          ...state.currentPlan,\n          tiers: filteredTiers,\n          updatedAt: new Date(),\n        },\n        selectedTier: state.selectedTier?.id === action.payload\n          ? null\n          : state.selectedTier,\n      };\n\n    case 'REORDER_TIERS':\n      if (!state.currentPlan) return state;\n      \n      const reorderedTiers = action.payload\n        .map((tierId, index) => {\n          const tier = state.currentPlan!.tiers.find(t => t.id === tierId);\n          return tier ? { ...tier, sortOrder: index } : null;\n        })\n        .filter(Boolean) as PricingTier[];\n      \n      return {\n        ...state,\n        currentPlan: {\n          ...state.currentPlan,\n          tiers: reorderedTiers,\n          updatedAt: new Date(),\n        },\n      };\n\n    case 'SET_SELECTED_TIER':\n      if (!action.payload) {\n        return {\n          ...state,\n          selectedTier: null,\n        };\n      }\n      \n      const selectedTier = state.currentPlan?.tiers.find(\n        tier => tier.id === action.payload\n      );\n      \n      return {\n        ...state,\n        selectedTier: selectedTier || null,\n      };\n\n    case 'TOGGLE_EDIT_MODE':\n      return {\n        ...state,\n        isEditing: !state.isEditing,\n        selectedTier: state.isEditing ? null : state.selectedTier,\n      };\n\n    case 'TOGGLE_PREVIEW_MODE':\n      return {\n        ...state,\n        isPreviewMode: !state.isPreviewMode,\n        selectedTier: state.isPreviewMode ? null : state.selectedTier,\n      };\n\n    case 'START_AB_TEST':\n      return {\n        ...state,\n        activeABTest: action.payload,\n      };\n\n    case 'STOP_AB_TEST':\n      return {\n        ...state,\n        activeABTest: null,\n      };\n\n    case 'ADD_GRANDFATHERING_RULE':\n      return {\n        ...state,\n        grandfatheringRules: [...state.grandfatheringRules, action.payload],\n      };\n\n    case 'UPDATE_GRANDFATHERING_RULE':\n      return {\n        ...state,\n        grandfatheringRules: state.grandfatheringRules.map(rule =>\n          rule.id === action.payload.id\n            ? { ...rule, ...action.payload.updates }\n            : rule\n        ),\n      };\n\n    case 'DELETE_GRANDFATHERING_RULE':\n      return {\n        ...state,\n        grandfatheringRules: state.grandfatheringRules.filter(\n          rule => rule.id !== action.payload\n        ),\n      };\n\n    case 'SAVE_HISTORY':\n      if (!state.currentPlan) return state;\n      \n      return {\n        ...state,\n        history: [...state.history, state.currentPlan],\n        undoStack: [...state.undoStack, state.currentPlan],\n        redoStack: [],\n      };\n\n    case 'UNDO':\n      if (state.undoStack.length === 0) return state;\n      \n      const previousPlan = state.undoStack[state.undoStack.length - 1];\n      const newUndoStack = state.undoStack.slice(0, -1);\n      \n      return {\n        ...state,\n        currentPlan: previousPlan,\n        undoStack: newUndoStack,\n        redoStack: [state.currentPlan!, ...state.redoStack],\n        selectedTier: null,\n      };\n\n    case 'REDO':\n      if (state.redoStack.length === 0) return state;\n      \n      const nextPlan = state.redoStack[0];\n      const newRedoStack = state.redoStack.slice(1);\n      \n      return {\n        ...state,\n        currentPlan: nextPlan,\n        undoStack: [...state.undoStack, state.currentPlan!],\n        redoStack: newRedoStack,\n        selectedTier: null,\n      };\n\n    case 'RESET':\n      return {\n        ...state,\n        currentPlan: state.history.length > 0 ? state.history[0] : null,\n        selectedTier: null,\n        isEditing: false,\n        isPreviewMode: false,\n        activeABTest: null,\n        undoStack: [],\n        redoStack: [],\n      };\n\n    default:\n      return state;\n  }\n}\n\n// ============================================================================\n// Helper Functions\n// ============================================================================\n\nexport function createEmptyPlan(): PricingPlan {\n  return {\n    id: `plan-${Date.now()}`,\n    name: 'New Pricing Plan',\n    description: 'A new pricing plan',\n    tiers: [],\n    currency: 'USD',\n    isActive: true,\n    version: '1.0.0',\n    createdAt: new Date(),\n    updatedAt: new Date(),\n  };\n}\n\nexport function createEmptyTier(): PricingTier {\n  return {\n    id: `tier-${Date.now()}`,\n    name: 'New Tier',\n    description: 'Add your description here',\n    price: 0,\n    currency: 'USD',\n    interval: 'month',\n    intervalCount: 1,\n    features: [],\n    isPopular: false,\n    isActive: true,\n    sortOrder: 0,\n  };\n}\n\nexport function validatePlan(plan: PricingPlan): string[] {\n  const errors: string[] = [];\n  \n  if (!plan.name.trim()) {\n    errors.push('Plan name is required');\n  }\n  \n  if (plan.tiers.length === 0) {\n    errors.push('At least one pricing tier is required');\n  }\n  \n  plan.tiers.forEach((tier, index) => {\n    if (!tier.name.trim()) {\n      errors.push(`Tier ${index + 1}: Name is required`);\n    }\n    \n    if (tier.price < 0) {\n      errors.push(`Tier ${index + 1}: Price cannot be negative`);\n    }\n    \n    if (tier.intervalCount <= 0) {\n      errors.push(`Tier ${index + 1}: Interval count must be positive`);\n    }\n  });\n  \n  return errors;\n}\n\nexport function calculatePlanMetrics(plan: PricingPlan): {\n  totalTiers: number;\n  activeTiers: number;\n  averagePrice: number;\n  priceRange: { min: number; max: number };\n  popularTier: PricingTier | null;\n} {\n  const activeTiers = plan.tiers.filter(tier => tier.isActive);\n  const prices = activeTiers.map(tier => tier.price);\n  \n  return {\n    totalTiers: plan.tiers.length,\n    activeTiers: activeTiers.length,\n    averagePrice: prices.length > 0 ? prices.reduce((sum, price) => sum + price, 0) / prices.length : 0,\n    priceRange: {\n      min: prices.length > 0 ? Math.min(...prices) : 0,\n      max: prices.length > 0 ? Math.max(...prices) : 0,\n    },\n    popularTier: plan.tiers.find(tier => tier.isPopular) || null,\n  };\n}\n","import { useReducer, useCallback, useState } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport {\n  PricingEditorProps,\n  PricingTier,\n  ABTest\n} from '../types/pricing';\nimport { PricingTierCard } from './pricing-tier-card';\nimport { PricingTierEditor } from './pricing-tier-editor';\nimport { ABTestPanel } from './ab-test-panel';\nimport { GrandfatheringPanel } from './grandfathering-panel';\nimport { PricingPreview } from './pricing-preview';\nimport { TemplateSelector } from './template-selector';\nimport { PricingCalculator } from './pricing-calculator';\nimport { pricingEditorReducer } from '../utils/pricing-editor-reducer';\nimport { cn } from '../utils/cn';\n\n// ============================================================================\n// Pricing Editor Component\n// ============================================================================\n\nexport function PricingEditor({\n  initialPlan,\n  onSave,\n  onPublish,\n  onABTestStart,\n  onABTestStop,\n  onGrandfatheringRuleAdd,\n  onGrandfatheringRuleUpdate,\n  onGrandfatheringRuleDelete,\n  templates = [],\n  onTemplateSelect,\n  currency = 'USD',\n  supportedCurrencies = ['USD', 'EUR', 'GBP', 'CAD', 'AUD'],\n  features = [],\n  limits = [],\n  className,\n  style,\n}: PricingEditorProps) {\n  const [state, dispatch] = useReducer(pricingEditorReducer, {\n    currentPlan: initialPlan || null,\n    selectedTier: null,\n    isEditing: false,\n    isPreviewMode: false,\n    activeABTest: null,\n    grandfatheringRules: [],\n    templates,\n    history: [],\n    undoStack: [],\n    redoStack: [],\n  });\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  // ============================================================================\n  // Event Handlers\n  // ============================================================================\n\n  const handleTierAdd = useCallback((tier: PricingTier) => {\n    dispatch({ type: 'ADD_TIER', payload: tier });\n  }, []);\n\n  const handleTierUpdate = useCallback((id: string, updates: Partial<PricingTier>) => {\n    dispatch({ type: 'UPDATE_TIER', payload: { id, updates } });\n  }, []);\n\n  const handleTierDelete = useCallback((id: string) => {\n    dispatch({ type: 'DELETE_TIER', payload: id });\n  }, []);\n\n  const handleTierReorder = useCallback((tierIds: string[]) => {\n    dispatch({ type: 'REORDER_TIERS', payload: tierIds });\n  }, []);\n\n  const handleTierSelect = useCallback((tierId: string | null) => {\n    dispatch({ type: 'SET_SELECTED_TIER', payload: tierId });\n  }, []);\n\n  const handleEditToggle = useCallback(() => {\n    dispatch({ type: 'TOGGLE_EDIT_MODE' });\n  }, []);\n\n  const handlePreviewToggle = useCallback(() => {\n    dispatch({ type: 'TOGGLE_PREVIEW_MODE' });\n  }, []);\n\n  const handleSave = useCallback(async () => {\n    if (!state.currentPlan || !onSave) return;\n    \n    setIsLoading(true);\n    try {\n      await onSave(state.currentPlan);\n      dispatch({ type: 'SAVE_HISTORY' });\n    } catch (error) {\n      console.error('Failed to save plan:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [state.currentPlan, onSave]);\n\n  const handlePublish = useCallback(async () => {\n    if (!state.currentPlan || !onPublish) return;\n    \n    setIsLoading(true);\n    try {\n      await onPublish(state.currentPlan);\n    } catch (error) {\n      console.error('Failed to publish plan:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [state.currentPlan, onPublish]);\n\n  const handleABTestStart = useCallback(async (abTest: ABTest) => {\n    dispatch({ type: 'START_AB_TEST', payload: abTest });\n    await onABTestStart?.(abTest);\n  }, [onABTestStart]);\n\n  const handleABTestStop = useCallback(async () => {\n    if (!state.activeABTest) return;\n    \n    dispatch({ type: 'STOP_AB_TEST' });\n    await onABTestStop?.(state.activeABTest.id);\n  }, [state.activeABTest, onABTestStop]);\n\n  const handleUndo = useCallback(() => {\n    dispatch({ type: 'UNDO' });\n  }, []);\n\n  const handleRedo = useCallback(() => {\n    dispatch({ type: 'REDO' });\n  }, []);\n\n  const handleReset = useCallback(() => {\n    dispatch({ type: 'RESET' });\n  }, []);\n\n  // ============================================================================\n  // Render\n  // ============================================================================\n\n  if (!state.currentPlan) {\n    return (\n      <div className={cn('flex items-center justify-center h-96', className)} style={style}>\n        <div className=\"text-center\">\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">No Pricing Plan</h3>\n          <p className=\"text-gray-500 mb-4\">Select a template or create a new plan to get started.</p>\n          <TemplateSelector\n            templates={templates}\n            onSelect={onTemplateSelect || ((_template) => {})}\n            onCreate={() => {}}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className={cn('pricing-editor', className)} style={style}>\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900\">{state.currentPlan.name}</h2>\n            <p className=\"text-gray-600\">{state.currentPlan.description}</p>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={handleEditToggle}\n              className={cn(\n                'px-4 py-2 rounded-md text-sm font-medium transition-colors',\n                state.isEditing\n                  ? 'bg-blue-600 text-white hover:bg-blue-700'\n                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n              )}\n            >\n              {state.isEditing ? 'Exit Edit' : 'Edit'}\n            </button>\n            \n            <button\n              onClick={handlePreviewToggle}\n              className={cn(\n                'px-4 py-2 rounded-md text-sm font-medium transition-colors',\n                state.isPreviewMode\n                  ? 'bg-green-600 text-white hover:bg-green-700'\n                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n              )}\n            >\n              {state.isPreviewMode ? 'Exit Preview' : 'Preview'}\n            </button>\n            \n            <button\n              onClick={handleSave}\n              disabled={isLoading}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-md text-sm font-medium hover:bg-blue-700 disabled:opacity-50\"\n            >\n              {isLoading ? 'Saving...' : 'Save'}\n            </button>\n            \n            <button\n              onClick={handlePublish}\n              disabled={isLoading}\n              className=\"px-4 py-2 bg-green-600 text-white rounded-md text-sm font-medium hover:bg-green-700 disabled:opacity-50\"\n            >\n              {isLoading ? 'Publishing...' : 'Publish'}\n            </button>\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Pricing Tiers */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Pricing Tiers</h3>\n              <p className=\"text-sm text-gray-600\">\n                Drag and drop to reorder tiers. Click to edit details.\n              </p>\n            </div>\n            \n            <div className=\"space-y-4\">\n              <AnimatePresence>\n                {state.currentPlan.tiers.map((tier, index) => (\n                  <motion.div\n                    key={tier.id}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    exit={{ opacity: 0, y: -20 }}\n                    transition={{ duration: 0.2 }}\n                  >\n                    <PricingTierCard\n                      tier={tier}\n                      index={index}\n                      isSelected={state.selectedTier?.id === tier.id}\n                      isEditing={state.isEditing}\n                      onSelect={() => handleTierSelect(tier.id)}\n                      onUpdate={(updates) => handleTierUpdate(tier.id, updates)}\n                      onDelete={() => handleTierDelete(tier.id)}\n                      onReorder={handleTierReorder}\n                    />\n                  </motion.div>\n                ))}\n              </AnimatePresence>\n            </div>\n            \n            {state.isEditing && (\n              <button\n                onClick={() => {\n                  const newTier: PricingTier = {\n                    id: `tier-${Date.now()}`,\n                    name: 'New Tier',\n                    description: 'Add your description here',\n                    price: 0,\n                    currency,\n                    interval: 'month',\n                    intervalCount: 1,\n                    features: [],\n                    isPopular: false,\n                    isActive: true,\n                    sortOrder: state.currentPlan!.tiers.length,\n                  };\n                  handleTierAdd(newTier);\n                }}\n                className=\"w-full mt-4 p-4 border-2 border-dashed border-gray-300 rounded-lg text-gray-500 hover:border-gray-400 hover:text-gray-600 transition-colors\"\n              >\n                + Add New Tier\n              </button>\n            )}\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"space-y-6\">\n            {/* Selected Tier Editor */}\n            {state.selectedTier && (\n              <PricingTierEditor\n                tier={state.selectedTier}\n                onUpdate={(updates) => handleTierUpdate(state.selectedTier!.id, updates)}\n                onClose={() => handleTierSelect(null)}\n                currency={currency}\n                supportedCurrencies={supportedCurrencies}\n                features={features}\n                limits={limits}\n              />\n            )}\n\n            {/* A/B Testing Panel */}\n            <ABTestPanel\n              activeTest={state.activeABTest}\n              onStart={handleABTestStart}\n              onStop={handleABTestStop}\n              currentPlan={state.currentPlan}\n            />\n\n            {/* Grandfathering Panel */}\n            <GrandfatheringPanel\n              rules={state.grandfatheringRules}\n              onAdd={onGrandfatheringRuleAdd || (() => {})}\n              onUpdate={onGrandfatheringRuleUpdate || (() => {})}\n              onDelete={onGrandfatheringRuleDelete || (() => {})}\n            />\n\n            {/* Pricing Calculator */}\n            <PricingCalculator\n              plan={state.currentPlan}\n              currency={currency}\n            />\n          </div>\n        </div>\n\n        {/* Preview Mode */}\n        {state.isPreviewMode && (\n          <div className=\"mt-8\">\n            <PricingPreview\n              plan={state.currentPlan}\n              currency={currency}\n            />\n          </div>\n        )}\n\n        {/* History Controls */}\n        <div className=\"mt-6 flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={handleUndo}\n              disabled={state.undoStack.length === 0}\n              className=\"px-3 py-1 text-sm text-gray-600 hover:text-gray-800 disabled:opacity-50\"\n            >\n              Undo\n            </button>\n            <button\n              onClick={handleRedo}\n              disabled={state.redoStack.length === 0}\n              className=\"px-3 py-1 text-sm text-gray-600 hover:text-gray-800 disabled:opacity-50\"\n            >\n              Redo\n            </button>\n            <button\n              onClick={handleReset}\n              className=\"px-3 py-1 text-sm text-red-600 hover:text-red-800\"\n            >\n              Reset\n            </button>\n          </div>\n          \n          <div className=\"text-sm text-gray-500\">\n            Version {state.currentPlan.version} • Last updated {state.currentPlan.updatedAt.toLocaleDateString()}\n          </div>\n        </div>\n      </div>\n    </DndProvider>\n  );\n}\n","import { z } from 'zod';\n\n// ============================================================================\n// Pricing Plan Schemas\n// ============================================================================\n\nexport const PricingTierSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  description: z.string().optional(),\n  price: z.number().nonnegative(),\n  currency: z.string().default('USD'),\n  interval: z.enum(['day', 'week', 'month', 'year']),\n  intervalCount: z.number().positive().default(1),\n  features: z.array(z.string()),\n  limits: z.record(z.string(), z.number().nonnegative()).optional(),\n  metadata: z.record(z.string()).optional(),\n  isPopular: z.boolean().default(false),\n  isActive: z.boolean().default(true),\n  sortOrder: z.number().default(0),\n});\n\nexport const PricingPlanSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  description: z.string().optional(),\n  tiers: z.array(PricingTierSchema),\n  currency: z.string().default('USD'),\n  isActive: z.boolean().default(true),\n  version: z.string().default('1.0.0'),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  metadata: z.record(z.string()).optional(),\n});\n\nexport const ABTestSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  description: z.string().optional(),\n  planA: z.string(), // Plan ID\n  planB: z.string(), // Plan ID\n  trafficSplit: z.number().min(0).max(1).default(0.5), // 50/50 split\n  startDate: z.date(),\n  endDate: z.date().optional(),\n  isActive: z.boolean().default(true),\n  metrics: z.object({\n    planAConversions: z.number().default(0),\n    planBConversions: z.number().default(0),\n    planARevenue: z.number().default(0),\n    planBRevenue: z.number().default(0),\n  }),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n});\n\nexport const GrandfatheringRuleSchema = z.object({\n  id: z.string(),\n  planId: z.string(),\n  customerSegment: z.string(), // e.g., \"early-adopters\", \"enterprise\"\n  conditions: z.object({\n    signupDateBefore: z.date().optional(),\n    hasFeature: z.string().optional(),\n    customCondition: z.string().optional(),\n  }),\n  actions: z.object({\n    keepCurrentPrice: z.boolean().default(true),\n    addBonusFeatures: z.array(z.string()).default([]),\n    extendTrial: z.number().optional(), // days\n    customDiscount: z.number().optional(), // percentage\n  }),\n  isActive: z.boolean().default(true),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n});\n\nexport const PricingTemplateSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  description: z.string(),\n  category: z.enum(['saas', 'ecommerce', 'marketplace', 'api', 'ai', 'custom']),\n  preview: z.string(),\n  template: PricingPlanSchema,\n  isPublic: z.boolean().default(false),\n  createdBy: z.string(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n});\n\n// ============================================================================\n// Type Exports\n// ============================================================================\n\nexport type PricingTier = z.infer<typeof PricingTierSchema>;\nexport type PricingPlan = z.infer<typeof PricingPlanSchema>;\nexport type ABTest = z.infer<typeof ABTestSchema>;\nexport type GrandfatheringRule = z.infer<typeof GrandfatheringRuleSchema>;\nexport type PricingTemplate = z.infer<typeof PricingTemplateSchema>;\n\n// ============================================================================\n// Pricing Editor State\n// ============================================================================\n\nexport interface PricingEditorState {\n  currentPlan: PricingPlan | null;\n  selectedTier: PricingTier | null;\n  isEditing: boolean;\n  isPreviewMode: boolean;\n  activeABTest: ABTest | null;\n  grandfatheringRules: GrandfatheringRule[];\n  templates: PricingTemplate[];\n  history: PricingPlan[];\n  undoStack: PricingPlan[];\n  redoStack: PricingPlan[];\n}\n\n// ============================================================================\n// Drag and Drop Types\n// ============================================================================\n\nexport interface DragItem {\n  type: 'tier' | 'feature' | 'template';\n  id: string;\n  data: any;\n}\n\nexport interface DropResult {\n  dropEffect: 'move' | 'copy';\n  targetId: string;\n  position: 'before' | 'after' | 'inside';\n}\n\n// ============================================================================\n// Pricing Calculator Types\n// ============================================================================\n\nexport interface PricingCalculation {\n  basePrice: number;\n  discounts: Array<{\n    type: 'percentage' | 'fixed';\n    value: number;\n    reason: string;\n  }>;\n  taxes: Array<{\n    type: 'vat' | 'sales' | 'gst';\n    rate: number;\n    amount: number;\n  }>;\n  total: number;\n  breakdown: {\n    subtotal: number;\n    discountAmount: number;\n    taxAmount: number;\n    total: number;\n  };\n}\n\nexport interface PricingComparison {\n  planA: PricingPlan;\n  planB: PricingPlan;\n  metrics: {\n    planARevenue: number;\n    planBRevenue: number;\n    planAConversions: number;\n    planBConversions: number;\n    planAConversionRate: number;\n    planBConversionRate: number;\n    planAARPU: number;\n    planBARPU: number;\n  };\n  recommendation: 'planA' | 'planB' | 'inconclusive';\n  confidence: number;\n}\n\n// ============================================================================\n// Pricing Editor Actions\n// ============================================================================\n\nexport type PricingEditorAction =\n  | { type: 'SET_PLAN'; payload: PricingPlan }\n  | { type: 'ADD_TIER'; payload: PricingTier }\n  | { type: 'UPDATE_TIER'; payload: { id: string; updates: Partial<PricingTier> } }\n  | { type: 'DELETE_TIER'; payload: string }\n  | { type: 'REORDER_TIERS'; payload: string[] }\n  | { type: 'SET_SELECTED_TIER'; payload: string | null }\n  | { type: 'TOGGLE_EDIT_MODE' }\n  | { type: 'TOGGLE_PREVIEW_MODE' }\n  | { type: 'START_AB_TEST'; payload: ABTest }\n  | { type: 'STOP_AB_TEST' }\n  | { type: 'ADD_GRANDFATHERING_RULE'; payload: GrandfatheringRule }\n  | { type: 'UPDATE_GRANDFATHERING_RULE'; payload: { id: string; updates: Partial<GrandfatheringRule> } }\n  | { type: 'DELETE_GRANDFATHERING_RULE'; payload: string }\n  | { type: 'SAVE_HISTORY' }\n  | { type: 'UNDO' }\n  | { type: 'REDO' }\n  | { type: 'RESET' };\n\n// ============================================================================\n// Pricing Editor Props\n// ============================================================================\n\nexport interface PricingEditorProps {\n  initialPlan?: PricingPlan;\n  onPlanChange?: (plan: PricingPlan) => void;\n  onSave?: (plan: PricingPlan) => Promise<void>;\n  onPublish?: (plan: PricingPlan) => Promise<void>;\n  onABTestStart?: (abTest: ABTest) => Promise<void>;\n  onABTestStop?: (abTestId: string) => Promise<void>;\n  onGrandfatheringRuleAdd?: (rule: GrandfatheringRule) => Promise<void>;\n  onGrandfatheringRuleUpdate?: (ruleId: string, updates: Partial<GrandfatheringRule>) => Promise<void>;\n  onGrandfatheringRuleDelete?: (ruleId: string) => Promise<void>;\n  templates?: PricingTemplate[];\n  onTemplateSelect?: (template: PricingTemplate) => void;\n  onTemplateCreate?: (template: Omit<PricingTemplate, 'id' | 'createdAt' | 'updatedAt'>) => Promise<void>;\n  currency?: string;\n  supportedCurrencies?: string[];\n  features?: string[];\n  limits?: string[];\n  className?: string;\n  style?: React.CSSProperties;\n}\n"]}