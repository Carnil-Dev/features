{"version":3,"sources":["../src/audit/audit-logger.ts","../src/data-protection/gdpr-manager.ts","../src/compliance-dashboard/dashboard.tsx","../src/index.ts"],"names":["z","crypto","useState","useEffect","jsx","jsxs","RefreshCw","XCircle","Download","Settings","Shield","Users","Lock","FileText","CheckCircle","AlertTriangle","Info","Eye"],"mappings":"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","file":"index.js","sourcesContent":["import { z } from 'zod';\nimport crypto from 'crypto';\n\n// ============================================================================\n// Audit Log Schemas\n// ============================================================================\n\nexport const AuditEventSchema = z.object({\n  id: z.string(),\n  timestamp: z.date(),\n  eventType: z.enum([\n    'user_login',\n    'user_logout',\n    'user_created',\n    'user_updated',\n    'user_deleted',\n    'payment_created',\n    'payment_updated',\n    'payment_cancelled',\n    'payment_refunded',\n    'subscription_created',\n    'subscription_updated',\n    'subscription_cancelled',\n    'data_accessed',\n    'data_modified',\n    'data_deleted',\n    'data_exported',\n    'data_imported',\n    'system_error',\n    'security_event',\n    'compliance_event',\n  ]),\n  userId: z.string().optional(),\n  customerId: z.string().optional(),\n  resourceId: z.string().optional(),\n  resourceType: z.string().optional(),\n  action: z.string(),\n  description: z.string(),\n  ipAddress: z.string().optional(),\n  userAgent: z.string().optional(),\n  metadata: z.record(z.any()).optional(),\n  severity: z.enum(['low', 'medium', 'high', 'critical']).default('medium'),\n  source: z.string().default('carnil-sdk'),\n  version: z.string().default('1.0.0'),\n});\n\nexport const AuditTrailSchema = z.object({\n  id: z.string(),\n  entityId: z.string(),\n  entityType: z.string(),\n  events: z.array(AuditEventSchema),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n});\n\nexport const ComplianceReportSchema = z.object({\n  id: z.string(),\n  reportType: z.enum(['gdpr', 'soc2', 'pci', 'hipaa', 'custom']),\n  period: z.object({\n    start: z.date(),\n    end: z.date(),\n  }),\n  status: z.enum(['pending', 'in_progress', 'completed', 'failed']),\n  findings: z.array(z.object({\n    id: z.string(),\n    type: z.enum(['violation', 'warning', 'recommendation', 'info']),\n    severity: z.enum(['low', 'medium', 'high', 'critical']),\n    description: z.string(),\n    recommendation: z.string().optional(),\n    status: z.enum(['open', 'in_progress', 'resolved', 'dismissed']),\n    createdAt: z.date(),\n    resolvedAt: z.date().optional(),\n  })),\n  summary: z.object({\n    totalEvents: z.number(),\n    violations: z.number(),\n    warnings: z.number(),\n    recommendations: z.number(),\n    complianceScore: z.number().min(0).max(100),\n  }),\n  generatedAt: z.date(),\n  generatedBy: z.string(),\n});\n\n// ============================================================================\n// Type Exports\n// ============================================================================\n\nexport type AuditEvent = z.infer<typeof AuditEventSchema>;\nexport type AuditTrail = z.infer<typeof AuditTrailSchema>;\nexport type ComplianceReport = z.infer<typeof ComplianceReportSchema>;\n\n// ============================================================================\n// Audit Logger\n// ============================================================================\n\nexport class AuditLogger {\n  private events: AuditEvent[] = [];\n  private maxEvents: number = 10000;\n  private retentionDays: number = 2555; // 7 years for compliance\n\n  constructor(_encryptionKey?: string) {\n    // Encryption key handling would be implemented here\n  }\n\n  // ============================================================================\n  // Event Logging\n  // ============================================================================\n\n  async logEvent(event: Omit<AuditEvent, 'id' | 'timestamp'>): Promise<AuditEvent> {\n    const auditEvent: AuditEvent = {\n      id: this.generateEventId(),\n      timestamp: new Date(),\n      ...event,\n    };\n\n    // Encrypt sensitive data\n    if (auditEvent.metadata) {\n      auditEvent.metadata = this.encryptMetadata(auditEvent.metadata);\n    }\n\n    this.events.push(auditEvent);\n\n    // Cleanup old events\n    this.cleanupOldEvents();\n\n    return auditEvent;\n  }\n\n  async logUserAction(\n    userId: string,\n    action: string,\n    description: string,\n    metadata?: Record<string, any>\n  ): Promise<AuditEvent> {\n    return this.logEvent({\n      eventType: 'data_modified',\n      userId,\n      action,\n      description,\n      metadata,\n      severity: 'medium',\n      source: 'carnil-sdk',\n      version: '1.0.0',\n    });\n  }\n\n  async logPaymentEvent(\n    customerId: string,\n    eventType: AuditEvent['eventType'],\n    action: string,\n    description: string,\n    resourceId?: string,\n    metadata?: Record<string, any>\n  ): Promise<AuditEvent> {\n    return this.logEvent({\n      eventType,\n      customerId,\n      resourceId,\n      resourceType: 'payment',\n      action,\n      description,\n      metadata,\n      severity: 'high',\n      source: 'carnil-sdk',\n      version: '1.0.0',\n    });\n  }\n\n  async logDataAccess(\n    userId: string,\n    resourceType: string,\n    resourceId: string,\n    action: string,\n    metadata?: Record<string, any>\n  ): Promise<AuditEvent> {\n    return this.logEvent({\n      eventType: 'data_accessed',\n      userId,\n      resourceType,\n      resourceId,\n      action,\n      description: `Accessed ${resourceType} ${resourceId}`,\n      metadata,\n      severity: 'medium',\n      source: 'carnil-sdk',\n      version: '1.0.0',\n    });\n  }\n\n  async logSecurityEvent(\n    eventType: 'security_event',\n    action: string,\n    description: string,\n    severity: AuditEvent['severity'] = 'high',\n    metadata?: Record<string, any>\n  ): Promise<AuditEvent> {\n    return this.logEvent({\n      eventType,\n      action,\n      description,\n      metadata,\n      severity,\n      source: 'carnil-sdk',\n      version: '1.0.0',\n    });\n  }\n\n  async logComplianceEvent(\n    eventType: 'compliance_event',\n    action: string,\n    description: string,\n    metadata?: Record<string, any>\n  ): Promise<AuditEvent> {\n    return this.logEvent({\n      eventType,\n      action,\n      description,\n      metadata,\n      severity: 'high',\n      source: 'carnil-sdk',\n      version: '1.0.0',\n    });\n  }\n\n  // ============================================================================\n  // Event Retrieval\n  // ============================================================================\n\n  getEvents(filters?: {\n    eventType?: AuditEvent['eventType'];\n    userId?: string;\n    customerId?: string;\n    resourceType?: string;\n    resourceId?: string;\n    severity?: AuditEvent['severity'];\n    startDate?: Date;\n    endDate?: Date;\n  }): AuditEvent[] {\n    let filteredEvents = [...this.events];\n\n    if (filters) {\n      if (filters.eventType) {\n        filteredEvents = filteredEvents.filter(e => e.eventType === filters.eventType);\n      }\n      if (filters.userId) {\n        filteredEvents = filteredEvents.filter(e => e.userId === filters.userId);\n      }\n      if (filters.customerId) {\n        filteredEvents = filteredEvents.filter(e => e.customerId === filters.customerId);\n      }\n      if (filters.resourceType) {\n        filteredEvents = filteredEvents.filter(e => e.resourceType === filters.resourceType);\n      }\n      if (filters.resourceId) {\n        filteredEvents = filteredEvents.filter(e => e.resourceId === filters.resourceId);\n      }\n      if (filters.severity) {\n        filteredEvents = filteredEvents.filter(e => e.severity === filters.severity);\n      }\n      if (filters.startDate) {\n        filteredEvents = filteredEvents.filter(e => e.timestamp >= filters.startDate!);\n      }\n      if (filters.endDate) {\n        filteredEvents = filteredEvents.filter(e => e.timestamp <= filters.endDate!);\n      }\n    }\n\n    return filteredEvents.sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime());\n  }\n\n  getAuditTrail(entityId: string, entityType: string): AuditTrail {\n    const events = this.getEvents({ resourceId: entityId, resourceType: entityType });\n    \n    return {\n      id: `trail_${entityId}_${entityType}`,\n      entityId,\n      entityType,\n      events,\n      createdAt: events.length > 0 ? events[events.length - 1].timestamp : new Date(),\n      updatedAt: events.length > 0 ? events[0].timestamp : new Date(),\n    };\n  }\n\n  // ============================================================================\n  // Compliance Reporting\n  // ============================================================================\n\n  async generateComplianceReport(\n    reportType: ComplianceReport['reportType'],\n    period: { start: Date; end: Date },\n    generatedBy: string\n  ): Promise<ComplianceReport> {\n    const events = this.getEvents({\n      startDate: period.start,\n      endDate: period.end,\n    });\n\n    const findings = this.analyzeCompliance(events, reportType);\n    const summary = this.calculateComplianceSummary(events, findings);\n\n    return {\n      id: `report_${reportType}_${Date.now()}`,\n      reportType,\n      period,\n      status: 'completed',\n      findings,\n      summary,\n      generatedAt: new Date(),\n      generatedBy,\n    };\n  }\n\n  // ============================================================================\n  // Data Export\n  // ============================================================================\n\n  async exportAuditData(\n    filters?: Parameters<AuditLogger['getEvents']>[0],\n    format: 'json' | 'csv' = 'json'\n  ): Promise<string> {\n    const events = this.getEvents(filters);\n    \n    if (format === 'csv') {\n      return this.exportToCSV(events);\n    }\n    \n    return JSON.stringify(events, null, 2);\n  }\n\n  // ============================================================================\n  // Private Methods\n  // ============================================================================\n\n  private generateEventId(): string {\n    return `audit_${Date.now()}_${crypto.randomBytes(8).toString('hex')}`;\n  }\n\n  private encryptMetadata(metadata: Record<string, any>): Record<string, any> {\n    // Simple encryption for demo purposes\n    // In production, use proper encryption\n    const encrypted: Record<string, any> = {};\n    \n    for (const [key, value] of Object.entries(metadata)) {\n      if (typeof value === 'string' && value.length > 0) {\n        encrypted[key] = `encrypted_${Buffer.from(value).toString('base64')}`;\n      } else {\n        encrypted[key] = value;\n      }\n    }\n    \n    return encrypted;\n  }\n\n  private cleanupOldEvents(): void {\n    const cutoffDate = new Date();\n    cutoffDate.setDate(cutoffDate.getDate() - this.retentionDays);\n    \n    this.events = this.events.filter(event => event.timestamp >= cutoffDate);\n    \n    // Keep only the most recent events if we exceed maxEvents\n    if (this.events.length > this.maxEvents) {\n      this.events = this.events\n        .sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime())\n        .slice(0, this.maxEvents);\n    }\n  }\n\n  private analyzeCompliance(events: AuditEvent[], reportType: ComplianceReport['reportType']): ComplianceReport['findings'] {\n    const findings: ComplianceReport['findings'] = [];\n    \n    // Analyze for GDPR compliance\n    if (reportType === 'gdpr') {\n      // Check for data access events\n      const dataAccessEvents = events.filter(e => e.eventType === 'data_accessed');\n      if (dataAccessEvents.length > 0) {\n        findings.push({\n          id: `finding_${Date.now()}_1`,\n          type: 'info',\n          severity: 'low',\n          description: `${dataAccessEvents.length} data access events recorded`,\n          recommendation: 'Ensure all data access is properly logged and authorized',\n          status: 'open',\n          createdAt: new Date(),\n        });\n      }\n      \n      // Check for data deletion events\n      const dataDeletionEvents = events.filter(e => e.eventType === 'data_deleted');\n      if (dataDeletionEvents.length === 0) {\n        findings.push({\n          id: `finding_${Date.now()}_2`,\n          type: 'warning',\n          severity: 'medium',\n          description: 'No data deletion events found',\n          recommendation: 'Implement data deletion capabilities for GDPR compliance',\n          status: 'open',\n          createdAt: new Date(),\n        });\n      }\n    }\n    \n    // Analyze for SOC2 compliance\n    if (reportType === 'soc2') {\n      // Check for security events\n      const securityEvents = events.filter(e => e.eventType === 'security_event');\n      if (securityEvents.length > 0) {\n        findings.push({\n          id: `finding_${Date.now()}_3`,\n          type: 'violation',\n          severity: 'high',\n          description: `${securityEvents.length} security events detected`,\n          recommendation: 'Review and address all security events',\n          status: 'open',\n          createdAt: new Date(),\n        });\n      }\n      \n      // Check for system errors\n      const systemErrors = events.filter(e => e.eventType === 'system_error');\n      if (systemErrors.length > 10) {\n        findings.push({\n          id: `finding_${Date.now()}_4`,\n          type: 'warning',\n          severity: 'medium',\n          description: `${systemErrors.length} system errors detected`,\n          recommendation: 'Investigate and resolve system errors',\n          status: 'open',\n          createdAt: new Date(),\n        });\n      }\n    }\n    \n    return findings;\n  }\n\n  private calculateComplianceSummary(\n    events: AuditEvent[],\n    findings: ComplianceReport['findings']\n  ): ComplianceReport['summary'] {\n    const violations = findings.filter((f: any) => f.type === 'violation').length;\n    const warnings = findings.filter((f: any) => f.type === 'warning').length;\n    const recommendations = findings.filter((f: any) => f.type === 'recommendation').length;\n    \n    const complianceScore = Math.max(0, 100 - (violations * 20) - (warnings * 10) - (recommendations * 5));\n    \n    return {\n      totalEvents: events.length,\n      violations,\n      warnings,\n      recommendations,\n      complianceScore,\n    };\n  }\n\n  private exportToCSV(events: AuditEvent[]): string {\n    const headers = [\n      'id',\n      'timestamp',\n      'eventType',\n      'userId',\n      'customerId',\n      'resourceId',\n      'resourceType',\n      'action',\n      'description',\n      'severity',\n      'source',\n      'version',\n    ];\n    \n    const rows = events.map(event => [\n      event.id,\n      event.timestamp.toISOString(),\n      event.eventType,\n      event.userId || '',\n      event.customerId || '',\n      event.resourceId || '',\n      event.resourceType || '',\n      event.action,\n      event.description,\n      event.severity,\n      event.source,\n      event.version,\n    ]);\n    \n    return [headers, ...rows]\n      .map(row => row.map(field => `\"${field}\"`).join(','))\n      .join('\\n');\n  }\n}\n\n// ============================================================================\n// Global Audit Logger Instance\n// ============================================================================\n\nexport const globalAuditLogger = new AuditLogger();\n","import { z } from 'zod';\nimport crypto from 'crypto';\n\n// ============================================================================\n// GDPR Schemas\n// ============================================================================\n\nexport const DataSubjectSchema = z.object({\n  id: z.string(),\n  email: z.string().email(),\n  name: z.string().optional(),\n  phone: z.string().optional(),\n  address: z\n    .object({\n      street: z.string().optional(),\n      city: z.string().optional(),\n      state: z.string().optional(),\n      postalCode: z.string().optional(),\n      country: z.string().optional(),\n    })\n    .optional(),\n  metadata: z.record(z.string()).optional(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n});\n\nexport const DataProcessingActivitySchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  description: z.string(),\n  purpose: z.string(),\n  legalBasis: z.enum([\n    'consent',\n    'contract',\n    'legal_obligation',\n    'vital_interests',\n    'public_task',\n    'legitimate_interests',\n  ]),\n  dataCategories: z.array(z.string()),\n  dataSubjects: z.array(z.string()), // Data subject IDs\n  processors: z.array(z.string()), // Processor IDs\n  retentionPeriod: z.number(), // Days\n  isActive: z.boolean().default(true),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n});\n\nexport const ConsentRecordSchema = z.object({\n  id: z.string(),\n  dataSubjectId: z.string(),\n  purpose: z.string(),\n  consentGiven: z.boolean(),\n  consentDate: z.date(),\n  withdrawalDate: z.date().optional(),\n  method: z.enum(['explicit', 'opt_in', 'opt_out', 'implied']),\n  version: z.string().default('1.0'),\n  metadata: z.record(z.string()).optional(),\n});\n\nexport const DataErasureRequestSchema = z.object({\n  id: z.string(),\n  dataSubjectId: z.string(),\n  requestDate: z.date(),\n  status: z.enum(['pending', 'in_progress', 'completed', 'rejected']),\n  reason: z.string(),\n  requestedBy: z.string(),\n  processedBy: z.string().optional(),\n  processedAt: z.date().optional(),\n  erasureDetails: z.object({\n    dataCategories: z.array(z.string()),\n    systemsAffected: z.array(z.string()),\n    backupRetention: z.boolean().default(false),\n    legalBasis: z.string().optional(),\n  }),\n  metadata: z.record(z.string()).optional(),\n});\n\nexport const DataPortabilityRequestSchema = z.object({\n  id: z.string(),\n  dataSubjectId: z.string(),\n  requestDate: z.date(),\n  status: z.enum(['pending', 'in_progress', 'completed', 'rejected']),\n  requestedBy: z.string(),\n  processedBy: z.string().optional(),\n  processedAt: z.date().optional(),\n  dataFormat: z.enum(['json', 'csv', 'xml', 'pdf']),\n  dataCategories: z.array(z.string()),\n  downloadUrl: z.string().optional(),\n  expiresAt: z.date().optional(),\n  metadata: z.record(z.string()).optional(),\n});\n\n// ============================================================================\n// Type Exports\n// ============================================================================\n\nexport type DataSubject = z.infer<typeof DataSubjectSchema>;\nexport type DataProcessingActivity = z.infer<typeof DataProcessingActivitySchema>;\nexport type ConsentRecord = z.infer<typeof ConsentRecordSchema>;\nexport type DataErasureRequest = z.infer<typeof DataErasureRequestSchema>;\nexport type DataPortabilityRequest = z.infer<typeof DataPortabilityRequestSchema>;\n\n// ============================================================================\n// GDPR Manager\n// ============================================================================\n\nexport class GDPRManager {\n  private dataSubjects: Map<string, DataSubject> = new Map();\n  private processingActivities: Map<string, DataProcessingActivity> = new Map();\n  private consentRecords: Map<string, ConsentRecord[]> = new Map();\n  private erasureRequests: Map<string, DataErasureRequest> = new Map();\n  private portabilityRequests: Map<string, DataPortabilityRequest> = new Map();\n\n  // ============================================================================\n  // Data Subject Management\n  // ============================================================================\n\n  async createDataSubject(\n    data: Omit<DataSubject, 'id' | 'createdAt' | 'updatedAt'>\n  ): Promise<DataSubject> {\n    const dataSubject: DataSubject = {\n      id: this.generateId(),\n      ...data,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n\n    this.dataSubjects.set(dataSubject.id, dataSubject);\n    return dataSubject;\n  }\n\n  async getDataSubject(id: string): Promise<DataSubject | null> {\n    return this.dataSubjects.get(id) || null;\n  }\n\n  async updateDataSubject(id: string, updates: Partial<DataSubject>): Promise<DataSubject | null> {\n    const dataSubject = this.dataSubjects.get(id);\n    if (!dataSubject) return null;\n\n    const updatedDataSubject: DataSubject = {\n      ...dataSubject,\n      ...updates,\n      updatedAt: new Date(),\n    };\n\n    this.dataSubjects.set(id, updatedDataSubject);\n    return updatedDataSubject;\n  }\n\n  async deleteDataSubject(id: string): Promise<boolean> {\n    return this.dataSubjects.delete(id);\n  }\n\n  async searchDataSubjects(query: {\n    email?: string;\n    name?: string;\n    phone?: string;\n  }): Promise<DataSubject[]> {\n    const subjects = Array.from(this.dataSubjects.values());\n\n    return subjects.filter(subject => {\n      if (query.email && !subject.email.toLowerCase().includes(query.email.toLowerCase())) {\n        return false;\n      }\n      if (\n        query.name &&\n        subject.name &&\n        !subject.name.toLowerCase().includes(query.name.toLowerCase())\n      ) {\n        return false;\n      }\n      if (query.phone && subject.phone && !subject.phone.includes(query.phone)) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  // ============================================================================\n  // Data Processing Activities\n  // ============================================================================\n\n  async createProcessingActivity(\n    data: Omit<DataProcessingActivity, 'id' | 'createdAt' | 'updatedAt'>\n  ): Promise<DataProcessingActivity> {\n    const activity: DataProcessingActivity = {\n      id: this.generateId(),\n      ...data,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n\n    this.processingActivities.set(activity.id, activity);\n    return activity;\n  }\n\n  async getProcessingActivity(id: string): Promise<DataProcessingActivity | null> {\n    return this.processingActivities.get(id) || null;\n  }\n\n  async getProcessingActivitiesForSubject(\n    dataSubjectId: string\n  ): Promise<DataProcessingActivity[]> {\n    const activities = Array.from(this.processingActivities.values());\n    return activities.filter(\n      activity => activity.dataSubjects.includes(dataSubjectId) && activity.isActive\n    );\n  }\n\n  // ============================================================================\n  // Consent Management\n  // ============================================================================\n\n  async recordConsent(\n    dataSubjectId: string,\n    purpose: string,\n    consentGiven: boolean,\n    method: ConsentRecord['method'] = 'explicit'\n  ): Promise<ConsentRecord> {\n    const consentRecord: ConsentRecord = {\n      id: this.generateId(),\n      dataSubjectId,\n      purpose,\n      consentGiven,\n      consentDate: new Date(),\n      method,\n      version: '1.0',\n    };\n\n    const existingConsents = this.consentRecords.get(dataSubjectId) || [];\n    this.consentRecords.set(dataSubjectId, [...existingConsents, consentRecord]);\n\n    return consentRecord;\n  }\n\n  async getConsentRecords(dataSubjectId: string): Promise<ConsentRecord[]> {\n    return this.consentRecords.get(dataSubjectId) || [];\n  }\n\n  async withdrawConsent(dataSubjectId: string, purpose: string): Promise<boolean> {\n    const consents = this.consentRecords.get(dataSubjectId) || [];\n    const consent = consents.find(c => c.purpose === purpose && c.consentGiven);\n\n    if (consent) {\n      consent.consentGiven = false;\n      consent.withdrawalDate = new Date();\n      return true;\n    }\n\n    return false;\n  }\n\n  async hasValidConsent(dataSubjectId: string, purpose: string): Promise<boolean> {\n    const consents = this.consentRecords.get(dataSubjectId) || [];\n    const consent = consents.find(c => c.purpose === purpose);\n\n    return consent ? consent.consentGiven : false;\n  }\n\n  // ============================================================================\n  // Data Erasure (Right to be Forgotten)\n  // ============================================================================\n\n  async requestDataErasure(\n    dataSubjectId: string,\n    reason: string,\n    requestedBy: string\n  ): Promise<DataErasureRequest> {\n    const erasureRequest: DataErasureRequest = {\n      id: this.generateId(),\n      dataSubjectId,\n      requestDate: new Date(),\n      status: 'pending',\n      reason,\n      requestedBy,\n      erasureDetails: {\n        dataCategories: [], // To be filled during processing\n        systemsAffected: [], // To be filled during processing\n        backupRetention: false,\n      },\n    };\n\n    this.erasureRequests.set(erasureRequest.id, erasureRequest);\n    return erasureRequest;\n  }\n\n  async processDataErasure(\n    requestId: string,\n    processedBy: string,\n    erasureDetails: DataErasureRequest['erasureDetails']\n  ): Promise<DataErasureRequest | null> {\n    const request = this.erasureRequests.get(requestId);\n    if (!request) return null;\n\n    request.status = 'in_progress';\n    request.processedBy = processedBy;\n    request.erasureDetails = erasureDetails;\n\n    // Simulate data erasure process\n    await this.performDataErasure(request.dataSubjectId, erasureDetails);\n\n    request.status = 'completed';\n    request.processedAt = new Date();\n\n    return request;\n  }\n\n  async getErasureRequests(dataSubjectId?: string): Promise<DataErasureRequest[]> {\n    const requests = Array.from(this.erasureRequests.values());\n\n    if (dataSubjectId) {\n      return requests.filter(request => request.dataSubjectId === dataSubjectId);\n    }\n\n    return requests;\n  }\n\n  // ============================================================================\n  // Data Portability (Right to Data Portability)\n  // ============================================================================\n\n  async requestDataPortability(\n    dataSubjectId: string,\n    dataFormat: DataPortabilityRequest['dataFormat'] = 'json',\n    dataCategories: string[] = []\n  ): Promise<DataPortabilityRequest> {\n    const portabilityRequest: DataPortabilityRequest = {\n      id: this.generateId(),\n      dataSubjectId,\n      requestDate: new Date(),\n      status: 'pending',\n      requestedBy: dataSubjectId, // Self-requested\n      dataFormat,\n      dataCategories,\n      expiresAt: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 days\n    };\n\n    this.portabilityRequests.set(portabilityRequest.id, portabilityRequest);\n    return portabilityRequest;\n  }\n\n  async processDataPortability(\n    requestId: string,\n    processedBy: string\n  ): Promise<DataPortabilityRequest | null> {\n    const request = this.portabilityRequests.get(requestId);\n    if (!request) return null;\n\n    request.status = 'in_progress';\n    request.processedBy = processedBy;\n\n    // Generate data export\n    const exportData = await this.generateDataExport(request.dataSubjectId, request.dataCategories);\n    const downloadUrl = await this.uploadDataExport(exportData, request.dataFormat);\n\n    request.status = 'completed';\n    request.processedAt = new Date();\n    request.downloadUrl = downloadUrl;\n\n    return request;\n  }\n\n  async getPortabilityRequests(dataSubjectId?: string): Promise<DataPortabilityRequest[]> {\n    const requests = Array.from(this.portabilityRequests.values());\n\n    if (dataSubjectId) {\n      return requests.filter(request => request.dataSubjectId === dataSubjectId);\n    }\n\n    return requests;\n  }\n\n  // ============================================================================\n  // GDPR Compliance Reporting\n  // ============================================================================\n\n  async generateGDPRReport(_period: { start: Date; end: Date }): Promise<{\n    summary: {\n      totalDataSubjects: number;\n      activeProcessingActivities: number;\n      consentRecords: number;\n      erasureRequests: number;\n      portabilityRequests: number;\n    };\n    compliance: {\n      consentRate: number;\n      erasureResponseTime: number;\n      portabilityResponseTime: number;\n      dataMinimization: boolean;\n      purposeLimitation: boolean;\n    };\n    recommendations: string[];\n  }> {\n    const dataSubjects = Array.from(this.dataSubjects.values());\n    const activities = Array.from(this.processingActivities.values());\n    const erasureRequests = Array.from(this.erasureRequests.values());\n    const portabilityRequests = Array.from(this.portabilityRequests.values());\n\n    const totalConsentRecords = Array.from(this.consentRecords.values()).flat().length;\n\n    const consentRate =\n      dataSubjects.length > 0 ? (totalConsentRecords / dataSubjects.length) * 100 : 0;\n\n    const erasureResponseTime = this.calculateAverageResponseTime(erasureRequests);\n    const portabilityResponseTime = this.calculateAverageResponseTime(portabilityRequests);\n\n    return {\n      summary: {\n        totalDataSubjects: dataSubjects.length,\n        activeProcessingActivities: activities.filter(a => a.isActive).length,\n        consentRecords: totalConsentRecords,\n        erasureRequests: erasureRequests.length,\n        portabilityRequests: portabilityRequests.length,\n      },\n      compliance: {\n        consentRate,\n        erasureResponseTime,\n        portabilityResponseTime,\n        dataMinimization: true, // Simplified\n        purposeLimitation: true, // Simplified\n      },\n      recommendations: this.generateComplianceRecommendations({\n        consentRate,\n        erasureResponseTime,\n        portabilityResponseTime,\n      }),\n    };\n  }\n\n  // ============================================================================\n  // Private Methods\n  // ============================================================================\n\n  private generateId(): string {\n    return `gdpr_${Date.now()}_${crypto.randomBytes(8).toString('hex')}`;\n  }\n\n  private async performDataErasure(\n    dataSubjectId: string,\n    erasureDetails: DataErasureRequest['erasureDetails']\n  ): Promise<void> {\n    // Simulate data erasure process\n    // In production, this would:\n    // 1. Identify all systems containing the data\n    // 2. Remove or anonymize the data\n    // 3. Update backup systems\n    // 4. Log the erasure process\n\n    console.log(`Performing data erasure for subject ${dataSubjectId}`);\n    console.log(`Data categories: ${erasureDetails.dataCategories.join(', ')}`);\n    console.log(`Systems affected: ${erasureDetails.systemsAffected.join(', ')}`);\n  }\n\n  private async generateDataExport(\n    dataSubjectId: string,\n    _dataCategories: string[]\n  ): Promise<Record<string, any>> {\n    const dataSubject = this.dataSubjects.get(dataSubjectId);\n    if (!dataSubject) throw new Error('Data subject not found');\n\n    const exportData: Record<string, any> = {\n      dataSubject: {\n        id: dataSubject.id,\n        email: dataSubject.email,\n        name: dataSubject.name,\n        phone: dataSubject.phone,\n        address: dataSubject.address,\n        createdAt: dataSubject.createdAt,\n        updatedAt: dataSubject.updatedAt,\n      },\n      processingActivities: await this.getProcessingActivitiesForSubject(dataSubjectId),\n      consentRecords: await this.getConsentRecords(dataSubjectId),\n      erasureRequests: await this.getErasureRequests(dataSubjectId),\n      portabilityRequests: await this.getPortabilityRequests(dataSubjectId),\n    };\n\n    return exportData;\n  }\n\n  private async uploadDataExport(\n    _data: Record<string, any>,\n    format: DataPortabilityRequest['dataFormat']\n  ): Promise<string> {\n    // Simulate data upload\n    const filename = `data_export_${Date.now()}.${format}`;\n    const downloadUrl = `https://example.com/downloads/${filename}`;\n\n    console.log(`Data export uploaded: ${downloadUrl}`);\n    return downloadUrl;\n  }\n\n  private calculateAverageResponseTime(\n    requests: Array<{ processedAt?: Date; requestDate: Date }>\n  ): number {\n    const completedRequests = requests.filter(r => r.processedAt);\n    if (completedRequests.length === 0) return 0;\n\n    const totalTime = completedRequests.reduce((sum, request) => {\n      const responseTime = request.processedAt!.getTime() - request.requestDate.getTime();\n      return sum + responseTime;\n    }, 0);\n\n    return totalTime / completedRequests.length / (1000 * 60 * 60 * 24); // Days\n  }\n\n  private generateComplianceRecommendations(metrics: {\n    consentRate: number;\n    erasureResponseTime: number;\n    portabilityResponseTime: number;\n  }): string[] {\n    const recommendations: string[] = [];\n\n    if (metrics.consentRate < 80) {\n      recommendations.push('Improve consent collection processes to increase consent rate');\n    }\n\n    if (metrics.erasureResponseTime > 30) {\n      recommendations.push('Optimize data erasure processes to reduce response time');\n    }\n\n    if (metrics.portabilityResponseTime > 7) {\n      recommendations.push('Streamline data portability processes to meet GDPR requirements');\n    }\n\n    if (recommendations.length === 0) {\n      recommendations.push('GDPR compliance is in good standing');\n    }\n\n    return recommendations;\n  }\n}\n\n// ============================================================================\n// Global GDPR Manager Instance\n// ============================================================================\n\nexport const globalGDPRManager = new GDPRManager();\n","import { useState, useEffect } from 'react';\nimport {\n  Shield,\n  AlertTriangle,\n  CheckCircle,\n  XCircle,\n  Info,\n  Download,\n  RefreshCw,\n  Settings,\n  FileText,\n  Users,\n  Lock,\n  Eye,\n} from 'lucide-react';\n\n// ============================================================================\n// Compliance Dashboard Component\n// ============================================================================\n\ninterface ComplianceDashboardProps {\n  className?: string;\n}\n\nexport function ComplianceDashboard({ className }: ComplianceDashboardProps) {\n  const [complianceData, setComplianceData] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedTab, setSelectedTab] = useState<'overview' | 'gdpr' | 'soc2' | 'audit'>(\n    'overview'\n  );\n\n  useEffect(() => {\n    fetchComplianceData();\n  }, []);\n\n  const fetchComplianceData = async () => {\n    try {\n      setLoading(true);\n      // This would fetch real compliance data\n      const mockData = {\n        overview: {\n          overallScore: 85,\n          status: 'COMPLIANT',\n          lastUpdated: new Date().toISOString(),\n          totalChecks: 24,\n          passed: 20,\n          failed: 2,\n          warnings: 2,\n          critical: 0,\n        },\n        gdpr: {\n          dataSubjects: 1250,\n          consentRate: 92,\n          erasureRequests: 15,\n          portabilityRequests: 8,\n          complianceScore: 88,\n          findings: [\n            {\n              id: '1',\n              type: 'warning',\n              severity: 'medium',\n              description: 'Data retention policies need review',\n              status: 'open',\n            },\n          ],\n        },\n        soc2: {\n          securityScore: 90,\n          availabilityScore: 95,\n          processingIntegrity: 88,\n          confidentiality: 92,\n          privacy: 85,\n          findings: [\n            {\n              id: '2',\n              type: 'info',\n              severity: 'low',\n              description: 'Security audit completed successfully',\n              status: 'resolved',\n            },\n          ],\n        },\n        audit: {\n          totalEvents: 15420,\n          securityEvents: 3,\n          dataAccessEvents: 892,\n          systemErrors: 12,\n          lastAudit: new Date().toISOString(),\n        },\n      };\n\n      setComplianceData(mockData);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch compliance data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRefresh = () => {\n    fetchComplianceData();\n  };\n\n  const handleExportReport = () => {\n    // Export compliance report\n    const report = {\n      timestamp: new Date().toISOString(),\n      data: complianceData,\n    };\n\n    // Browser environment check\n    // @ts-ignore - window and document are available in browser\n    if (typeof window === 'undefined') return;\n\n    const blob = new Blob([JSON.stringify(report, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    // @ts-ignore - document is available in browser\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `compliance-report-${new Date().toISOString().split('T')[0]}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  if (loading) {\n    return (\n      <div className={`flex items-center justify-center h-96 ${className}`}>\n        <div className=\"text-center\">\n          <RefreshCw className=\"w-8 h-8 animate-spin mx-auto mb-4 text-blue-600\" />\n          <p className=\"text-gray-600\">Loading compliance data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={`flex items-center justify-center h-96 ${className}`}>\n        <div className=\"text-center\">\n          <XCircle className=\"w-8 h-8 mx-auto mb-4 text-red-600\" />\n          <p className=\"text-red-600 mb-4\">Error: {error}</p>\n          <button\n            onClick={handleRefresh}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`compliance-dashboard ${className}`}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Compliance Dashboard</h1>\n          <p className=\"text-gray-600\">Monitor and manage compliance across all regulations</p>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={handleRefresh}\n            className=\"p-2 text-gray-600 hover:text-gray-800 rounded-md hover:bg-gray-100\"\n            title=\"Refresh data\"\n          >\n            <RefreshCw className=\"w-5 h-5\" />\n          </button>\n\n          <button\n            onClick={handleExportReport}\n            className=\"p-2 text-gray-600 hover:text-gray-800 rounded-md hover:bg-gray-100\"\n            title=\"Export report\"\n          >\n            <Download className=\"w-5 h-5\" />\n          </button>\n\n          <button\n            className=\"p-2 text-gray-600 hover:text-gray-800 rounded-md hover:bg-gray-100\"\n            title=\"Settings\"\n          >\n            <Settings className=\"w-5 h-5\" />\n          </button>\n        </div>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"flex space-x-1 mb-6\">\n        {[\n          { id: 'overview', label: 'Overview', icon: Shield },\n          { id: 'gdpr', label: 'GDPR', icon: Users },\n          { id: 'soc2', label: 'SOC2', icon: Lock },\n          { id: 'audit', label: 'Audit', icon: FileText },\n        ].map(({ id, label, icon: Icon }) => (\n          <button\n            key={id}\n            onClick={() => setSelectedTab(id as any)}\n            className={`flex items-center space-x-2 px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n              selectedTab === id\n                ? 'bg-blue-100 text-blue-700'\n                : 'text-gray-600 hover:text-gray-800 hover:bg-gray-100'\n            }`}\n          >\n            <Icon className=\"w-4 h-4\" />\n            <span>{label}</span>\n          </button>\n        ))}\n      </div>\n\n      {/* Content */}\n      <div className=\"space-y-6\">\n        {selectedTab === 'overview' && <OverviewTab data={complianceData?.overview} />}\n        {selectedTab === 'gdpr' && <GDPRTab data={complianceData?.gdpr} />}\n        {selectedTab === 'soc2' && <SOC2Tab data={complianceData?.soc2} />}\n        {selectedTab === 'audit' && <AuditTab data={complianceData?.audit} />}\n      </div>\n    </div>\n  );\n}\n\n// ============================================================================\n// Tab Components\n// ============================================================================\n\nfunction OverviewTab({ data }: { data: any }) {\n  if (!data) return null;\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'COMPLIANT':\n        return 'text-green-600 bg-green-100';\n      case 'NON_COMPLIANT':\n        return 'text-red-600 bg-red-100';\n      default:\n        return 'text-yellow-600 bg-yellow-100';\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'COMPLIANT':\n        return CheckCircle;\n      case 'NON_COMPLIANT':\n        return XCircle;\n      default:\n        return AlertTriangle;\n    }\n  };\n\n  const StatusIcon = getStatusIcon(data.status);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Overall Status */}\n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-lg font-semibold text-gray-900\">Overall Compliance Status</h2>\n          <div\n            className={`flex items-center space-x-2 px-3 py-1 rounded-full text-sm font-medium ${getStatusColor(data.status)}`}\n          >\n            <StatusIcon className=\"w-4 h-4\" />\n            <span>{data.status}</span>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-3xl font-bold text-blue-600\">{data.overallScore}%</div>\n            <div className=\"text-sm text-gray-600\">Overall Score</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-3xl font-bold text-green-600\">{data.passed}</div>\n            <div className=\"text-sm text-gray-600\">Passed Checks</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-3xl font-bold text-red-600\">{data.failed}</div>\n            <div className=\"text-sm text-gray-600\">Failed Checks</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Check Results */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <div className=\"text-2xl font-bold text-green-600\">{data.passed}</div>\n              <div className=\"text-sm text-gray-600\">Passed</div>\n            </div>\n            <CheckCircle className=\"w-8 h-8 text-green-600\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <div className=\"text-2xl font-bold text-red-600\">{data.failed}</div>\n              <div className=\"text-sm text-gray-600\">Failed</div>\n            </div>\n            <XCircle className=\"w-8 h-8 text-red-600\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <div className=\"text-2xl font-bold text-yellow-600\">{data.warnings}</div>\n              <div className=\"text-sm text-gray-600\">Warnings</div>\n            </div>\n            <AlertTriangle className=\"w-8 h-8 text-yellow-600\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <div className=\"text-2xl font-bold text-gray-600\">{data.totalChecks}</div>\n              <div className=\"text-sm text-gray-600\">Total Checks</div>\n            </div>\n            <Info className=\"w-8 h-8 text-gray-600\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction GDPRTab({ data }: { data: any }) {\n  if (!data) return null;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* GDPR Overview */}\n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">GDPR Compliance</h2>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-blue-600\">\n              {data.dataSubjects.toLocaleString()}\n            </div>\n            <div className=\"text-sm text-gray-600\">Data Subjects</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-green-600\">{data.consentRate}%</div>\n            <div className=\"text-sm text-gray-600\">Consent Rate</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-purple-600\">{data.erasureRequests}</div>\n            <div className=\"text-sm text-gray-600\">Erasure Requests</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-orange-600\">{data.portabilityRequests}</div>\n            <div className=\"text-sm text-gray-600\">Portability Requests</div>\n          </div>\n        </div>\n      </div>\n\n      {/* GDPR Findings */}\n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Recent Findings</h3>\n        <div className=\"space-y-3\">\n          {data.findings.map((finding: any) => (\n            <div\n              key={finding.id}\n              className=\"flex items-center justify-between p-3 bg-gray-50 rounded-md\"\n            >\n              <div className=\"flex items-center space-x-3\">\n                <div\n                  className={`w-3 h-3 rounded-full ${\n                    finding.severity === 'high'\n                      ? 'bg-red-500'\n                      : finding.severity === 'medium'\n                        ? 'bg-yellow-500'\n                        : 'bg-blue-500'\n                  }`}\n                />\n                <div>\n                  <div className=\"font-medium text-gray-900\">{finding.description}</div>\n                  <div className=\"text-sm text-gray-600\">Severity: {finding.severity}</div>\n                </div>\n              </div>\n              <div\n                className={`px-2 py-1 rounded-full text-xs font-medium ${\n                  finding.status === 'open'\n                    ? 'bg-red-100 text-red-800'\n                    : finding.status === 'resolved'\n                      ? 'bg-green-100 text-green-800'\n                      : 'bg-yellow-100 text-yellow-800'\n                }`}\n              >\n                {finding.status}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction SOC2Tab({ data }: { data: any }) {\n  if (!data) return null;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* SOC2 Overview */}\n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">SOC2 Compliance</h2>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-blue-600\">{data.securityScore}%</div>\n            <div className=\"text-sm text-gray-600\">Security</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-green-600\">{data.availabilityScore}%</div>\n            <div className=\"text-sm text-gray-600\">Availability</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-purple-600\">{data.processingIntegrity}%</div>\n            <div className=\"text-sm text-gray-600\">Processing Integrity</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-orange-600\">{data.confidentiality}%</div>\n            <div className=\"text-sm text-gray-600\">Confidentiality</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-red-600\">{data.privacy}%</div>\n            <div className=\"text-sm text-gray-600\">Privacy</div>\n          </div>\n        </div>\n      </div>\n\n      {/* SOC2 Findings */}\n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">SOC2 Findings</h3>\n        <div className=\"space-y-3\">\n          {data.findings.map((finding: any) => (\n            <div\n              key={finding.id}\n              className=\"flex items-center justify-between p-3 bg-gray-50 rounded-md\"\n            >\n              <div className=\"flex items-center space-x-3\">\n                <div\n                  className={`w-3 h-3 rounded-full ${\n                    finding.severity === 'high'\n                      ? 'bg-red-500'\n                      : finding.severity === 'medium'\n                        ? 'bg-yellow-500'\n                        : 'bg-blue-500'\n                  }`}\n                />\n                <div>\n                  <div className=\"font-medium text-gray-900\">{finding.description}</div>\n                  <div className=\"text-sm text-gray-600\">Type: {finding.type}</div>\n                </div>\n              </div>\n              <div\n                className={`px-2 py-1 rounded-full text-xs font-medium ${\n                  finding.status === 'open'\n                    ? 'bg-red-100 text-red-800'\n                    : finding.status === 'resolved'\n                      ? 'bg-green-100 text-green-800'\n                      : 'bg-yellow-100 text-yellow-800'\n                }`}\n              >\n                {finding.status}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction AuditTab({ data }: { data: any }) {\n  if (!data) return null;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Audit Overview */}\n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Audit Trail</h2>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-blue-600\">\n              {data.totalEvents.toLocaleString()}\n            </div>\n            <div className=\"text-sm text-gray-600\">Total Events</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-red-600\">{data.securityEvents}</div>\n            <div className=\"text-sm text-gray-600\">Security Events</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-green-600\">{data.dataAccessEvents}</div>\n            <div className=\"text-sm text-gray-600\">Data Access Events</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-yellow-600\">{data.systemErrors}</div>\n            <div className=\"text-sm text-gray-600\">System Errors</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Recent Activity */}\n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Recent Activity</h3>\n        <div className=\"space-y-3\">\n          <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-md\">\n            <div className=\"flex items-center space-x-3\">\n              <Eye className=\"w-5 h-5 text-blue-600\" />\n              <div>\n                <div className=\"font-medium text-gray-900\">Data access logged</div>\n                <div className=\"text-sm text-gray-600\">Customer data accessed by user</div>\n              </div>\n            </div>\n            <div className=\"text-sm text-gray-500\">2 minutes ago</div>\n          </div>\n\n          <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-md\">\n            <div className=\"flex items-center space-x-3\">\n              <Lock className=\"w-5 h-5 text-green-600\" />\n              <div>\n                <div className=\"font-medium text-gray-900\">Security event resolved</div>\n                <div className=\"text-sm text-gray-600\">Suspicious login attempt blocked</div>\n              </div>\n            </div>\n            <div className=\"text-sm text-gray-500\">1 hour ago</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ComplianceDashboard;\n","// ============================================================================\n// Compliance Package Exports\n// ============================================================================\n\n// Audit Logging\nexport * from './audit/audit-logger';\n\n// Data Protection\nexport * from './data-protection/gdpr-manager';\n\n// Compliance Dashboard\nexport * from './compliance-dashboard/dashboard';\n\n// ============================================================================\n// Main Compliance Manager\n// ============================================================================\n\nimport { AuditLogger, globalAuditLogger } from './audit/audit-logger';\nimport { GDPRManager, globalGDPRManager } from './data-protection/gdpr-manager';\n\nexport class ComplianceManager {\n  private auditLogger: AuditLogger;\n  private gdprManager: GDPRManager;\n\n  constructor() {\n    this.auditLogger = globalAuditLogger;\n    this.gdprManager = globalGDPRManager;\n  }\n\n  // ============================================================================\n  // Audit Logging\n  // ============================================================================\n\n  async logEvent(event: any) {\n    return this.auditLogger.logEvent(event);\n  }\n\n  async logUserAction(\n    userId: string,\n    action: string,\n    description: string,\n    metadata?: Record<string, any>\n  ) {\n    return this.auditLogger.logUserAction(userId, action, description, metadata);\n  }\n\n  async logPaymentEvent(\n    customerId: string,\n    eventType: any,\n    action: string,\n    description: string,\n    resourceId?: string,\n    metadata?: Record<string, any>\n  ) {\n    return this.auditLogger.logPaymentEvent(\n      customerId,\n      eventType,\n      action,\n      description,\n      resourceId,\n      metadata\n    );\n  }\n\n  async logDataAccess(\n    userId: string,\n    resourceType: string,\n    resourceId: string,\n    action: string,\n    metadata?: Record<string, any>\n  ) {\n    return this.auditLogger.logDataAccess(userId, resourceType, resourceId, action, metadata);\n  }\n\n  async logSecurityEvent(\n    eventType: 'security_event',\n    action: string,\n    description: string,\n    severity?: any,\n    metadata?: Record<string, any>\n  ) {\n    return this.auditLogger.logSecurityEvent(eventType, action, description, severity, metadata);\n  }\n\n  async logComplianceEvent(\n    eventType: 'compliance_event',\n    action: string,\n    description: string,\n    metadata?: Record<string, any>\n  ) {\n    return this.auditLogger.logComplianceEvent(eventType, action, description, metadata);\n  }\n\n  getEvents(filters?: any) {\n    return this.auditLogger.getEvents(filters);\n  }\n\n  getAuditTrail(entityId: string, entityType: string) {\n    return this.auditLogger.getAuditTrail(entityId, entityType);\n  }\n\n  async generateAuditComplianceReport(\n    reportType: any,\n    period: { start: Date; end: Date },\n    generatedBy: string\n  ) {\n    return this.auditLogger.generateComplianceReport(reportType, period, generatedBy);\n  }\n\n  async exportAuditData(filters?: any, format: 'json' | 'csv' = 'json') {\n    return this.auditLogger.exportAuditData(filters, format);\n  }\n\n  // ============================================================================\n  // GDPR Management\n  // ============================================================================\n\n  async createDataSubject(data: any) {\n    return this.gdprManager.createDataSubject(data);\n  }\n\n  async getDataSubject(id: string) {\n    return this.gdprManager.getDataSubject(id);\n  }\n\n  async updateDataSubject(id: string, updates: any) {\n    return this.gdprManager.updateDataSubject(id, updates);\n  }\n\n  async deleteDataSubject(id: string) {\n    return this.gdprManager.deleteDataSubject(id);\n  }\n\n  async searchDataSubjects(query: any) {\n    return this.gdprManager.searchDataSubjects(query);\n  }\n\n  async createProcessingActivity(data: any) {\n    return this.gdprManager.createProcessingActivity(data);\n  }\n\n  async getProcessingActivity(id: string) {\n    return this.gdprManager.getProcessingActivity(id);\n  }\n\n  async getProcessingActivitiesForSubject(dataSubjectId: string) {\n    return this.gdprManager.getProcessingActivitiesForSubject(dataSubjectId);\n  }\n\n  async recordConsent(dataSubjectId: string, purpose: string, consentGiven: boolean, method?: any) {\n    return this.gdprManager.recordConsent(dataSubjectId, purpose, consentGiven, method);\n  }\n\n  async getConsentRecords(dataSubjectId: string) {\n    return this.gdprManager.getConsentRecords(dataSubjectId);\n  }\n\n  async withdrawConsent(dataSubjectId: string, purpose: string) {\n    return this.gdprManager.withdrawConsent(dataSubjectId, purpose);\n  }\n\n  async hasValidConsent(dataSubjectId: string, purpose: string) {\n    return this.gdprManager.hasValidConsent(dataSubjectId, purpose);\n  }\n\n  async requestDataErasure(dataSubjectId: string, reason: string, requestedBy: string) {\n    return this.gdprManager.requestDataErasure(dataSubjectId, reason, requestedBy);\n  }\n\n  async processDataErasure(requestId: string, processedBy: string, erasureDetails: any) {\n    return this.gdprManager.processDataErasure(requestId, processedBy, erasureDetails);\n  }\n\n  async getErasureRequests(dataSubjectId?: string) {\n    return this.gdprManager.getErasureRequests(dataSubjectId);\n  }\n\n  async requestDataPortability(dataSubjectId: string, dataFormat?: any, dataCategories?: string[]) {\n    return this.gdprManager.requestDataPortability(dataSubjectId, dataFormat, dataCategories);\n  }\n\n  async processDataPortability(requestId: string, processedBy: string) {\n    return this.gdprManager.processDataPortability(requestId, processedBy);\n  }\n\n  async getPortabilityRequests(dataSubjectId?: string) {\n    return this.gdprManager.getPortabilityRequests(dataSubjectId);\n  }\n\n  async generateGDPRReport(period: { start: Date; end: Date }) {\n    return this.gdprManager.generateGDPRReport(period);\n  }\n\n  // ============================================================================\n  // Combined Compliance Operations\n  // ============================================================================\n\n  async performComplianceCheck(): Promise<{\n    overallScore: number;\n    status: string;\n    findings: any[];\n    recommendations: string[];\n  }> {\n    // This would run a comprehensive compliance check\n    const auditEvents = this.auditLogger.getEvents();\n    const gdprReport = await this.gdprManager.generateGDPRReport({\n      start: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000), // 30 days ago\n      end: new Date(),\n    });\n\n    const findings: any[] = [];\n    const recommendations: string[] = [];\n\n    // Analyze audit events for compliance issues\n    const securityEvents = auditEvents.filter(e => e.eventType === 'security_event');\n    if (securityEvents.length > 0) {\n      findings.push({\n        type: 'security',\n        severity: 'high',\n        description: `${securityEvents.length} security events detected`,\n        recommendation: 'Review and address all security events',\n      });\n    }\n\n    // Analyze GDPR compliance\n    if (gdprReport.compliance.consentRate < 80) {\n      findings.push({\n        type: 'gdpr',\n        severity: 'medium',\n        description: 'Low consent rate detected',\n        recommendation: 'Improve consent collection processes',\n      });\n    }\n\n    if (gdprReport.compliance.erasureResponseTime > 30) {\n      findings.push({\n        type: 'gdpr',\n        severity: 'medium',\n        description: 'Slow data erasure response time',\n        recommendation: 'Optimize data erasure processes',\n      });\n    }\n\n    // Calculate overall score\n    const criticalFindings = findings.filter(f => f.severity === 'high').length;\n    const mediumFindings = findings.filter(f => f.severity === 'medium').length;\n\n    const overallScore = Math.max(0, 100 - criticalFindings * 20 - mediumFindings * 10);\n    const status = overallScore >= 80 ? 'COMPLIANT' : 'NON_COMPLIANT';\n\n    // Generate recommendations\n    if (criticalFindings > 0) {\n      recommendations.push('Address critical compliance issues immediately');\n    }\n    if (mediumFindings > 0) {\n      recommendations.push('Review and address medium priority issues');\n    }\n    if (overallScore < 80) {\n      recommendations.push('Overall compliance score is below threshold');\n    }\n\n    return {\n      overallScore,\n      status,\n      findings,\n      recommendations,\n    };\n  }\n\n  async generateComplianceReport(\n    reportType: 'gdpr' | 'soc2' | 'pci' | 'hipaa' | 'custom' = 'custom'\n  ): Promise<any> {\n    const period = {\n      start: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000), // 30 days ago\n      end: new Date(),\n    };\n\n    const [auditReport, gdprReport, complianceCheck] = await Promise.all([\n      this.generateAuditComplianceReport(reportType, period, 'system'),\n      this.gdprManager.generateGDPRReport(period),\n      this.performComplianceCheck(),\n    ]);\n\n    return {\n      id: `compliance_report_${Date.now()}`,\n      reportType,\n      period,\n      generatedAt: new Date(),\n      generatedBy: 'system',\n      status: 'completed',\n      summary: {\n        overallScore: complianceCheck.overallScore,\n        status: complianceCheck.status,\n        totalFindings: complianceCheck.findings.length,\n        criticalFindings: complianceCheck.findings.filter((f: any) => f.severity === 'high').length,\n        mediumFindings: complianceCheck.findings.filter((f: any) => f.severity === 'medium').length,\n        lowFindings: complianceCheck.findings.filter((f: any) => f.severity === 'low').length,\n      },\n      audit: auditReport,\n      gdpr: gdprReport,\n      compliance: complianceCheck,\n      recommendations: complianceCheck.recommendations,\n    };\n  }\n}\n\n// ============================================================================\n// Global Compliance Manager Instance\n// ============================================================================\n\nexport const globalComplianceManager = new ComplianceManager();\n\n// ============================================================================\n// React Hooks for Compliance\n// ============================================================================\n\nimport { useState, useEffect } from 'react';\n\nexport function useComplianceDashboard() {\n  const [complianceData, setComplianceData] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchComplianceData = async () => {\n      try {\n        setLoading(true);\n        const report = await globalComplianceManager.generateComplianceReport();\n        setComplianceData(report);\n        setError(null);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to fetch compliance data');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchComplianceData();\n  }, []);\n\n  return { complianceData, loading, error };\n}\n\nexport function useAuditTrail(entityId: string, entityType: string) {\n  const [auditTrail, setAuditTrail] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchAuditTrail = async () => {\n      try {\n        setLoading(true);\n        const trail = globalComplianceManager.getAuditTrail(entityId, entityType);\n        setAuditTrail(trail);\n        setError(null);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to fetch audit trail');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (entityId && entityType) {\n      fetchAuditTrail();\n    }\n  }, [entityId, entityType]);\n\n  return { auditTrail, loading, error };\n}\n\nexport function useGDPRData(dataSubjectId: string) {\n  const [gdprData, setGdprData] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchGDPRData = async () => {\n      try {\n        setLoading(true);\n        const [dataSubject, consentRecords, erasureRequests, portabilityRequests] =\n          await Promise.all([\n            globalComplianceManager.getDataSubject(dataSubjectId),\n            globalComplianceManager.getConsentRecords(dataSubjectId),\n            globalComplianceManager.getErasureRequests(dataSubjectId),\n            globalComplianceManager.getPortabilityRequests(dataSubjectId),\n          ]);\n\n        setGdprData({\n          dataSubject,\n          consentRecords,\n          erasureRequests,\n          portabilityRequests,\n        });\n        setError(null);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to fetch GDPR data');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (dataSubjectId) {\n      fetchGDPRData();\n    }\n  }, [dataSubjectId]);\n\n  return { gdprData, loading, error };\n}\n\n// ============================================================================\n// Default Export\n// ============================================================================\n\nexport default ComplianceManager;\n"]}